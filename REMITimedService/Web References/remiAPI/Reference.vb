'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
'
Namespace RemiAPI
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="RemiAPISoap", [Namespace]:="http://go/remi/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ValidationBase))>  _
    Partial Public Class RemiAPI
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SearchBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddUnitExceptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUnitIMEIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddUnitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAvailableUnitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAvailableUnitsExcludedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitBSNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNumOfUnitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitAssignedToOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DTATTAAddRemoveUnitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResolveStationNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHostIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackingLocationIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReturnMultipleStationNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReturnMultipleStationNamesByTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSpecificLocationForCurrentUsersTestCenterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParametricTestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestsByStationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestStagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestStageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobStagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupIDByTypeStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupsTypeStringByProductOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupsTypeStringByProductParentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupsAdvancedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupsByTypeStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveLookupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupsByProductOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupsByProductParentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLookupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrientationsByJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserDetails2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFriendlyUserIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateProductOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductGroupsDataTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductIDByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductSettingsByProductIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductSettingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductSettingByProductIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBatchUnitsInStageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BatchUpdateOrientationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestingSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStressingSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BatchStartedBeforeAssignedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDefaultReqNumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDefaultReqNumWithUnitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductTypeIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestCenterIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccessoryTypeIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBatchNotificationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBatchCommentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHardwareRevisionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCPRNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBatchNextStageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestStagesNameByBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestStagesByBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStagesNeedingCompletionByUnitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestsByBatchStageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestsByBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveBatchCommentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DNPParametricForBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPercentageCompleteForBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveBatchListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRequestsNotInREMIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRequestsForDashBoardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckBatchForStatusUpdatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ScanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ScanAdvancedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBatchResultsOverviewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IncomingGetAndSaveBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMailAdvancedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllAccessByWorkstationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HasAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HasAccessByWorkstationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTestRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestRecordAddOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuildConfigurationObjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteExceptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddExceptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetServicesAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.REMITimedService.My.MySettings.Default.REMITimedService_RemiAPI_RemiAPI
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SearchBatchCompleted As SearchBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event AddUnitExceptionCompleted As AddUnitExceptionCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUnitIMEICompleted As UpdateUnitIMEICompletedEventHandler
        
        '''<remarks/>
        Public Event AddUnitCompleted As AddUnitCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAvailableUnitsCompleted As GetAvailableUnitsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAvailableUnitsExcludedCompleted As GetAvailableUnitsExcludedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitBSNCompleted As GetUnitBSNCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNumOfUnitsCompleted As GetNumOfUnitsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitAssignedToCompleted As GetUnitAssignedToCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitCompleted As GetUnitCompletedEventHandler
        
        '''<remarks/>
        Public Event DTATTAAddRemoveUnitCompleted As DTATTAAddRemoveUnitCompletedEventHandler
        
        '''<remarks/>
        Public Event ResolveStationNameCompleted As ResolveStationNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHostIDCompleted As GetHostIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackingLocationIDCompleted As GetTrackingLocationIDCompletedEventHandler
        
        '''<remarks/>
        Public Event ReturnMultipleStationNamesCompleted As ReturnMultipleStationNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event ReturnMultipleStationNamesByTypeCompleted As ReturnMultipleStationNamesByTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSpecificLocationForCurrentUsersTestCenterCompleted As GetSpecificLocationForCurrentUsersTestCenterCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestCompleted As GetTestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestByIDCompleted As GetTestByIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParametricTestsCompleted As GetParametricTestsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestsCompleted As GetTestsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestsByStationCompleted As GetTestsByStationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestStagesCompleted As GetTestStagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestStageCompleted As GetTestStageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobStagesCompleted As GetJobStagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupIDByTypeStringCompleted As GetLookupIDByTypeStringCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupsTypeStringByProductCompleted As GetLookupsTypeStringByProductCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupsTypeStringByProductParentCompleted As GetLookupsTypeStringByProductParentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupsAdvancedCompleted As GetLookupsAdvancedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupsByTypeStringCompleted As GetLookupsByTypeStringCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveLookupCompleted As SaveLookupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupIDCompleted As GetLookupIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupsByProductCompleted As GetLookupsByProductCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupsByProductParentCompleted As GetLookupsByProductParentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLookupsCompleted As GetLookupsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobsCompleted As GetJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobCompleted As GetJobCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrientationsByJobCompleted As GetOrientationsByJobCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobAccessCompleted As GetJobAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveJobCompleted As SaveJobCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserDetailsCompleted As GetUserDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserDetails2Completed As GetUserDetails2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserCompleted As GetUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFriendlyUserIDCompleted As GetFriendlyUserIDCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateProductCompleted As UpdateProductCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductGroupsCompleted As GetProductGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductGroupsDataTableCompleted As GetProductGroupsDataTableCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductIDByNameCompleted As GetProductIDByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductSettingsByProductIDCompleted As GetProductSettingsByProductIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductSettingsCompleted As GetProductSettingsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductSettingCompleted As GetProductSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductSettingByProductIDCompleted As GetProductSettingByProductIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBatchUnitsInStageCompleted As GetBatchUnitsInStageCompletedEventHandler
        
        '''<remarks/>
        Public Event BatchUpdateOrientationCompleted As BatchUpdateOrientationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestingSummaryCompleted As GetTestingSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStressingSummaryCompleted As GetStressingSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event BatchStartedBeforeAssignedCompleted As BatchStartedBeforeAssignedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDefaultReqNumCompleted As GetDefaultReqNumCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDefaultReqNumWithUnitCompleted As GetDefaultReqNumWithUnitCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductTypeIDCompleted As GetProductTypeIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestCenterIDCompleted As GetTestCenterIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccessoryTypeIDCompleted As GetAccessoryTypeIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBatchCompleted As GetBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBatchNotificationsCompleted As GetBatchNotificationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBatchCommentsCompleted As GetBatchCommentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHardwareRevisionCompleted As GetHardwareRevisionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCPRNumberCompleted As GetCPRNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBatchNextStageCompleted As GetBatchNextStageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestStagesNameByBatchCompleted As GetTestStagesNameByBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestStagesByBatchCompleted As GetTestStagesByBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStagesNeedingCompletionByUnitCompleted As GetStagesNeedingCompletionByUnitCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestsByBatchStageCompleted As GetTestsByBatchStageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestsByBatchCompleted As GetTestsByBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveBatchCommentCompleted As SaveBatchCommentCompletedEventHandler
        
        '''<remarks/>
        Public Event DNPParametricForBatchCompleted As DNPParametricForBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPercentageCompleteForBatchCompleted As GetPercentageCompleteForBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveBatchListCompleted As GetActiveBatchListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRequestsNotInREMICompleted As GetRequestsNotInREMICompletedEventHandler
        
        '''<remarks/>
        Public Event GetRequestsForDashBoardCompleted As GetRequestsForDashBoardCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckBatchForStatusUpdatesCompleted As CheckBatchForStatusUpdatesCompletedEventHandler
        
        '''<remarks/>
        Public Event ScanCompleted As ScanCompletedEventHandler
        
        '''<remarks/>
        Public Event ScanAdvancedCompleted As ScanAdvancedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBatchResultsOverviewCompleted As GetBatchResultsOverviewCompletedEventHandler
        
        '''<remarks/>
        Public Event IncomingGetAndSaveBatchCompleted As IncomingGetAndSaveBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMailCompleted As SendMailCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMailAdvancedCompleted As SendMailAdvancedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllAccessByWorkstationCompleted As GetAllAccessByWorkstationCompletedEventHandler
        
        '''<remarks/>
        Public Event HasAccessCompleted As HasAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event HasAccessByWorkstationCompleted As HasAccessByWorkstationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTestRecordsCompleted As GetTestRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event TestRecordAddCompleted As TestRecordAddCompletedEventHandler
        
        '''<remarks/>
        Public Event BuildConfigurationObjectCompleted As BuildConfigurationObjectCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteExceptionCompleted As DeleteExceptionCompletedEventHandler
        
        '''<remarks/>
        Public Event AddExceptionCompleted As AddExceptionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRequestCompleted As GetRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetServicesAccessCompleted As GetServicesAccessCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/SearchBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchBatch( _
                    ByVal userIdentification As String,  _
                    ByVal AccessoryGroup As String,  _
                    ByVal BatchStart As Date,  _
                    ByVal BatchEnd As Date,  _
                    ByVal department As String,  _
                    ByVal TestCenter As String,  _
                    ByVal JobName As String,  _
                    ByVal Priority As String,  _
                    ByVal Product As String,  _
                    ByVal ProductType As String,  _
                    ByVal Revision As String,  _
                    ByVal TestName As String,  _
                    ByVal TestStage As String,  _
                    ByVal UserName As String,  _
                    ByVal TrackingLocationName As String,  _
                    ByVal NotInTrackingLocationFunction As TrackingLocationFunction,  _
                    ByVal RequestReason As String,  _
                    ByVal status As BatchStatus,  _
                    ByVal TrackingLocationFunction As TrackingLocationFunction,  _
                    ByVal exTestStageType() As BatchSearchTestStageType,  _
                    ByVal exBatchStatus() As BatchSearchBatchStatus,  _
                    ByVal testStageType As TestStageType) As BatchView()
            Dim results() As Object = Me.Invoke("SearchBatch", New Object() {userIdentification, AccessoryGroup, BatchStart, BatchEnd, department, TestCenter, JobName, Priority, Product, ProductType, Revision, TestName, TestStage, UserName, TrackingLocationName, NotInTrackingLocationFunction, RequestReason, status, TrackingLocationFunction, exTestStageType, exBatchStatus, testStageType})
            Return CType(results(0),BatchView())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchBatchAsync( _
                    ByVal userIdentification As String,  _
                    ByVal AccessoryGroup As String,  _
                    ByVal BatchStart As Date,  _
                    ByVal BatchEnd As Date,  _
                    ByVal department As String,  _
                    ByVal TestCenter As String,  _
                    ByVal JobName As String,  _
                    ByVal Priority As String,  _
                    ByVal Product As String,  _
                    ByVal ProductType As String,  _
                    ByVal Revision As String,  _
                    ByVal TestName As String,  _
                    ByVal TestStage As String,  _
                    ByVal UserName As String,  _
                    ByVal TrackingLocationName As String,  _
                    ByVal NotInTrackingLocationFunction As TrackingLocationFunction,  _
                    ByVal RequestReason As String,  _
                    ByVal status As BatchStatus,  _
                    ByVal TrackingLocationFunction As TrackingLocationFunction,  _
                    ByVal exTestStageType() As BatchSearchTestStageType,  _
                    ByVal exBatchStatus() As BatchSearchBatchStatus,  _
                    ByVal testStageType As TestStageType)
            Me.SearchBatchAsync(userIdentification, AccessoryGroup, BatchStart, BatchEnd, department, TestCenter, JobName, Priority, Product, ProductType, Revision, TestName, TestStage, UserName, TrackingLocationName, NotInTrackingLocationFunction, RequestReason, status, TrackingLocationFunction, exTestStageType, exBatchStatus, testStageType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchBatchAsync( _
                    ByVal userIdentification As String,  _
                    ByVal AccessoryGroup As String,  _
                    ByVal BatchStart As Date,  _
                    ByVal BatchEnd As Date,  _
                    ByVal department As String,  _
                    ByVal TestCenter As String,  _
                    ByVal JobName As String,  _
                    ByVal Priority As String,  _
                    ByVal Product As String,  _
                    ByVal ProductType As String,  _
                    ByVal Revision As String,  _
                    ByVal TestName As String,  _
                    ByVal TestStage As String,  _
                    ByVal UserName As String,  _
                    ByVal TrackingLocationName As String,  _
                    ByVal NotInTrackingLocationFunction As TrackingLocationFunction,  _
                    ByVal RequestReason As String,  _
                    ByVal status As BatchStatus,  _
                    ByVal TrackingLocationFunction As TrackingLocationFunction,  _
                    ByVal exTestStageType() As BatchSearchTestStageType,  _
                    ByVal exBatchStatus() As BatchSearchBatchStatus,  _
                    ByVal testStageType As TestStageType,  _
                    ByVal userState As Object)
            If (Me.SearchBatchOperationCompleted Is Nothing) Then
                Me.SearchBatchOperationCompleted = AddressOf Me.OnSearchBatchOperationCompleted
            End If
            Me.InvokeAsync("SearchBatch", New Object() {userIdentification, AccessoryGroup, BatchStart, BatchEnd, department, TestCenter, JobName, Priority, Product, ProductType, Revision, TestName, TestStage, UserName, TrackingLocationName, NotInTrackingLocationFunction, RequestReason, status, TrackingLocationFunction, exTestStageType, exBatchStatus, testStageType}, Me.SearchBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchBatchCompleted(Me, New SearchBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/AddUnitException", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddUnitException(ByVal qraNumber As String, ByVal TestName As String, ByVal userIdentification As String) As Notification
            Dim results() As Object = Me.Invoke("AddUnitException", New Object() {qraNumber, TestName, userIdentification})
            Return CType(results(0),Notification)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddUnitExceptionAsync(ByVal qraNumber As String, ByVal TestName As String, ByVal userIdentification As String)
            Me.AddUnitExceptionAsync(qraNumber, TestName, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddUnitExceptionAsync(ByVal qraNumber As String, ByVal TestName As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.AddUnitExceptionOperationCompleted Is Nothing) Then
                Me.AddUnitExceptionOperationCompleted = AddressOf Me.OnAddUnitExceptionOperationCompleted
            End If
            Me.InvokeAsync("AddUnitException", New Object() {qraNumber, TestName, userIdentification}, Me.AddUnitExceptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddUnitExceptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddUnitExceptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddUnitExceptionCompleted(Me, New AddUnitExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/UpdateUnitIMEI", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUnitIMEI(ByVal QRANumber As String, ByVal IMEI As String, ByVal userIdentification As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateUnitIMEI", New Object() {QRANumber, IMEI, userIdentification})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUnitIMEIAsync(ByVal QRANumber As String, ByVal IMEI As String, ByVal userIdentification As String)
            Me.UpdateUnitIMEIAsync(QRANumber, IMEI, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUnitIMEIAsync(ByVal QRANumber As String, ByVal IMEI As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.UpdateUnitIMEIOperationCompleted Is Nothing) Then
                Me.UpdateUnitIMEIOperationCompleted = AddressOf Me.OnUpdateUnitIMEIOperationCompleted
            End If
            Me.InvokeAsync("UpdateUnitIMEI", New Object() {QRANumber, IMEI, userIdentification}, Me.UpdateUnitIMEIOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUnitIMEIOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUnitIMEICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUnitIMEICompleted(Me, New UpdateUnitIMEICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/AddUnit", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddUnit(ByVal QRANumber As String, ByVal BSN As String, ByVal userIdentification As String) As Boolean
            Dim results() As Object = Me.Invoke("AddUnit", New Object() {QRANumber, BSN, userIdentification})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddUnitAsync(ByVal QRANumber As String, ByVal BSN As String, ByVal userIdentification As String)
            Me.AddUnitAsync(QRANumber, BSN, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddUnitAsync(ByVal QRANumber As String, ByVal BSN As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.AddUnitOperationCompleted Is Nothing) Then
                Me.AddUnitOperationCompleted = AddressOf Me.OnAddUnitOperationCompleted
            End If
            Me.InvokeAsync("AddUnit", New Object() {QRANumber, BSN, userIdentification}, Me.AddUnitOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddUnitOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddUnitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddUnitCompleted(Me, New AddUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetAvailableUnits", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAvailableUnits(ByVal QRANumber As String) As String()
            Dim results() As Object = Me.Invoke("GetAvailableUnits", New Object() {QRANumber})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAvailableUnitsAsync(ByVal QRANumber As String)
            Me.GetAvailableUnitsAsync(QRANumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAvailableUnitsAsync(ByVal QRANumber As String, ByVal userState As Object)
            If (Me.GetAvailableUnitsOperationCompleted Is Nothing) Then
                Me.GetAvailableUnitsOperationCompleted = AddressOf Me.OnGetAvailableUnitsOperationCompleted
            End If
            Me.InvokeAsync("GetAvailableUnits", New Object() {QRANumber}, Me.GetAvailableUnitsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAvailableUnitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAvailableUnitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAvailableUnitsCompleted(Me, New GetAvailableUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetAvailableUnitsExcluded", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAvailableUnitsExcluded(ByVal QRANumber As String, ByVal excludedUnitNumber As String) As String()
            Dim results() As Object = Me.Invoke("GetAvailableUnitsExcluded", New Object() {QRANumber, excludedUnitNumber})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAvailableUnitsExcludedAsync(ByVal QRANumber As String, ByVal excludedUnitNumber As String)
            Me.GetAvailableUnitsExcludedAsync(QRANumber, excludedUnitNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAvailableUnitsExcludedAsync(ByVal QRANumber As String, ByVal excludedUnitNumber As String, ByVal userState As Object)
            If (Me.GetAvailableUnitsExcludedOperationCompleted Is Nothing) Then
                Me.GetAvailableUnitsExcludedOperationCompleted = AddressOf Me.OnGetAvailableUnitsExcludedOperationCompleted
            End If
            Me.InvokeAsync("GetAvailableUnitsExcluded", New Object() {QRANumber, excludedUnitNumber}, Me.GetAvailableUnitsExcludedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAvailableUnitsExcludedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAvailableUnitsExcludedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAvailableUnitsExcludedCompleted(Me, New GetAvailableUnitsExcludedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetUnitBSN", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitBSN(ByVal QRANumber As String, ByVal batchUnitNumber As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetUnitBSN", New Object() {QRANumber, batchUnitNumber})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitBSNAsync(ByVal QRANumber As String, ByVal batchUnitNumber As Integer)
            Me.GetUnitBSNAsync(QRANumber, batchUnitNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitBSNAsync(ByVal QRANumber As String, ByVal batchUnitNumber As Integer, ByVal userState As Object)
            If (Me.GetUnitBSNOperationCompleted Is Nothing) Then
                Me.GetUnitBSNOperationCompleted = AddressOf Me.OnGetUnitBSNOperationCompleted
            End If
            Me.InvokeAsync("GetUnitBSN", New Object() {QRANumber, batchUnitNumber}, Me.GetUnitBSNOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitBSNOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitBSNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitBSNCompleted(Me, New GetUnitBSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetNumOfUnits", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNumOfUnits(ByVal QRANumber As String) As Integer
            Dim results() As Object = Me.Invoke("GetNumOfUnits", New Object() {QRANumber})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNumOfUnitsAsync(ByVal QRANumber As String)
            Me.GetNumOfUnitsAsync(QRANumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNumOfUnitsAsync(ByVal QRANumber As String, ByVal userState As Object)
            If (Me.GetNumOfUnitsOperationCompleted Is Nothing) Then
                Me.GetNumOfUnitsOperationCompleted = AddressOf Me.OnGetNumOfUnitsOperationCompleted
            End If
            Me.InvokeAsync("GetNumOfUnits", New Object() {QRANumber}, Me.GetNumOfUnitsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNumOfUnitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumOfUnitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumOfUnitsCompleted(Me, New GetNumOfUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetUnitAssignedTo", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitAssignedTo(ByVal QRANumber As String, ByVal batchUnitNumber As Integer) As String
            Dim results() As Object = Me.Invoke("GetUnitAssignedTo", New Object() {QRANumber, batchUnitNumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitAssignedToAsync(ByVal QRANumber As String, ByVal batchUnitNumber As Integer)
            Me.GetUnitAssignedToAsync(QRANumber, batchUnitNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitAssignedToAsync(ByVal QRANumber As String, ByVal batchUnitNumber As Integer, ByVal userState As Object)
            If (Me.GetUnitAssignedToOperationCompleted Is Nothing) Then
                Me.GetUnitAssignedToOperationCompleted = AddressOf Me.OnGetUnitAssignedToOperationCompleted
            End If
            Me.InvokeAsync("GetUnitAssignedTo", New Object() {QRANumber, batchUnitNumber}, Me.GetUnitAssignedToOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitAssignedToOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitAssignedToCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitAssignedToCompleted(Me, New GetUnitAssignedToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetUnit", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnit(ByVal QRANumber As String, ByVal batchUnitNumber As Integer) As TestUnit
            Dim results() As Object = Me.Invoke("GetUnit", New Object() {QRANumber, batchUnitNumber})
            Return CType(results(0),TestUnit)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitAsync(ByVal QRANumber As String, ByVal batchUnitNumber As Integer)
            Me.GetUnitAsync(QRANumber, batchUnitNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitAsync(ByVal QRANumber As String, ByVal batchUnitNumber As Integer, ByVal userState As Object)
            If (Me.GetUnitOperationCompleted Is Nothing) Then
                Me.GetUnitOperationCompleted = AddressOf Me.OnGetUnitOperationCompleted
            End If
            Me.InvokeAsync("GetUnit", New Object() {QRANumber, batchUnitNumber}, Me.GetUnitOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitCompleted(Me, New GetUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/DTATTAAddRemoveUnit", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DTATTAAddRemoveUnit(ByVal qranumber As String, ByVal testStage As String, ByVal test As String, ByVal userIdentification As String, ByVal result As FinalTestResult) As Boolean
            Dim results() As Object = Me.Invoke("DTATTAAddRemoveUnit", New Object() {qranumber, testStage, test, userIdentification, result})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DTATTAAddRemoveUnitAsync(ByVal qranumber As String, ByVal testStage As String, ByVal test As String, ByVal userIdentification As String, ByVal result As FinalTestResult)
            Me.DTATTAAddRemoveUnitAsync(qranumber, testStage, test, userIdentification, result, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DTATTAAddRemoveUnitAsync(ByVal qranumber As String, ByVal testStage As String, ByVal test As String, ByVal userIdentification As String, ByVal result As FinalTestResult, ByVal userState As Object)
            If (Me.DTATTAAddRemoveUnitOperationCompleted Is Nothing) Then
                Me.DTATTAAddRemoveUnitOperationCompleted = AddressOf Me.OnDTATTAAddRemoveUnitOperationCompleted
            End If
            Me.InvokeAsync("DTATTAAddRemoveUnit", New Object() {qranumber, testStage, test, userIdentification, result}, Me.DTATTAAddRemoveUnitOperationCompleted, userState)
        End Sub
        
        Private Sub OnDTATTAAddRemoveUnitOperationCompleted(ByVal arg As Object)
            If (Not (Me.DTATTAAddRemoveUnitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DTATTAAddRemoveUnitCompleted(Me, New DTATTAAddRemoveUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/ResolveStationName", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ResolveStationName(ByVal computerName As String) As String
            Dim results() As Object = Me.Invoke("ResolveStationName", New Object() {computerName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ResolveStationNameAsync(ByVal computerName As String)
            Me.ResolveStationNameAsync(computerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResolveStationNameAsync(ByVal computerName As String, ByVal userState As Object)
            If (Me.ResolveStationNameOperationCompleted Is Nothing) Then
                Me.ResolveStationNameOperationCompleted = AddressOf Me.OnResolveStationNameOperationCompleted
            End If
            Me.InvokeAsync("ResolveStationName", New Object() {computerName}, Me.ResolveStationNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnResolveStationNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResolveStationNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResolveStationNameCompleted(Me, New ResolveStationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetHostID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHostID(ByVal computerName As String, ByVal trackingLocationID As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetHostID", New Object() {computerName, trackingLocationID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHostIDAsync(ByVal computerName As String, ByVal trackingLocationID As Integer)
            Me.GetHostIDAsync(computerName, trackingLocationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHostIDAsync(ByVal computerName As String, ByVal trackingLocationID As Integer, ByVal userState As Object)
            If (Me.GetHostIDOperationCompleted Is Nothing) Then
                Me.GetHostIDOperationCompleted = AddressOf Me.OnGetHostIDOperationCompleted
            End If
            Me.InvokeAsync("GetHostID", New Object() {computerName, trackingLocationID}, Me.GetHostIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHostIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHostIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHostIDCompleted(Me, New GetHostIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTrackingLocationID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackingLocationID(ByVal trackingLocationName As String, ByVal testCenterID As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetTrackingLocationID", New Object() {trackingLocationName, testCenterID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackingLocationIDAsync(ByVal trackingLocationName As String, ByVal testCenterID As Integer)
            Me.GetTrackingLocationIDAsync(trackingLocationName, testCenterID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackingLocationIDAsync(ByVal trackingLocationName As String, ByVal testCenterID As Integer, ByVal userState As Object)
            If (Me.GetTrackingLocationIDOperationCompleted Is Nothing) Then
                Me.GetTrackingLocationIDOperationCompleted = AddressOf Me.OnGetTrackingLocationIDOperationCompleted
            End If
            Me.InvokeAsync("GetTrackingLocationID", New Object() {trackingLocationName, testCenterID}, Me.GetTrackingLocationIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackingLocationIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackingLocationIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackingLocationIDCompleted(Me, New GetTrackingLocationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/ReturnMultipleStationNames", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReturnMultipleStationNames(ByVal computerName As String) As String()
            Dim results() As Object = Me.Invoke("ReturnMultipleStationNames", New Object() {computerName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReturnMultipleStationNamesAsync(ByVal computerName As String)
            Me.ReturnMultipleStationNamesAsync(computerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReturnMultipleStationNamesAsync(ByVal computerName As String, ByVal userState As Object)
            If (Me.ReturnMultipleStationNamesOperationCompleted Is Nothing) Then
                Me.ReturnMultipleStationNamesOperationCompleted = AddressOf Me.OnReturnMultipleStationNamesOperationCompleted
            End If
            Me.InvokeAsync("ReturnMultipleStationNames", New Object() {computerName}, Me.ReturnMultipleStationNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnReturnMultipleStationNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReturnMultipleStationNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReturnMultipleStationNamesCompleted(Me, New ReturnMultipleStationNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/ReturnMultipleStationNamesByType", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReturnMultipleStationNamesByType(ByVal computerName As String, ByVal trackingLocationType As String) As TrackingLocation()
            Dim results() As Object = Me.Invoke("ReturnMultipleStationNamesByType", New Object() {computerName, trackingLocationType})
            Return CType(results(0),TrackingLocation())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReturnMultipleStationNamesByTypeAsync(ByVal computerName As String, ByVal trackingLocationType As String)
            Me.ReturnMultipleStationNamesByTypeAsync(computerName, trackingLocationType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReturnMultipleStationNamesByTypeAsync(ByVal computerName As String, ByVal trackingLocationType As String, ByVal userState As Object)
            If (Me.ReturnMultipleStationNamesByTypeOperationCompleted Is Nothing) Then
                Me.ReturnMultipleStationNamesByTypeOperationCompleted = AddressOf Me.OnReturnMultipleStationNamesByTypeOperationCompleted
            End If
            Me.InvokeAsync("ReturnMultipleStationNamesByType", New Object() {computerName, trackingLocationType}, Me.ReturnMultipleStationNamesByTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnReturnMultipleStationNamesByTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReturnMultipleStationNamesByTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReturnMultipleStationNamesByTypeCompleted(Me, New ReturnMultipleStationNamesByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetSpecificLocationForCurrentUsersTestCenter", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSpecificLocationForCurrentUsersTestCenter(ByVal stationName As String, ByVal userIdentification As String) As Integer
            Dim results() As Object = Me.Invoke("GetSpecificLocationForCurrentUsersTestCenter", New Object() {stationName, userIdentification})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSpecificLocationForCurrentUsersTestCenterAsync(ByVal stationName As String, ByVal userIdentification As String)
            Me.GetSpecificLocationForCurrentUsersTestCenterAsync(stationName, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSpecificLocationForCurrentUsersTestCenterAsync(ByVal stationName As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.GetSpecificLocationForCurrentUsersTestCenterOperationCompleted Is Nothing) Then
                Me.GetSpecificLocationForCurrentUsersTestCenterOperationCompleted = AddressOf Me.OnGetSpecificLocationForCurrentUsersTestCenterOperationCompleted
            End If
            Me.InvokeAsync("GetSpecificLocationForCurrentUsersTestCenter", New Object() {stationName, userIdentification}, Me.GetSpecificLocationForCurrentUsersTestCenterOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSpecificLocationForCurrentUsersTestCenterOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSpecificLocationForCurrentUsersTestCenterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSpecificLocationForCurrentUsersTestCenterCompleted(Me, New GetSpecificLocationForCurrentUsersTestCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTest", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTest(ByVal Name As String) As Test
            Dim results() As Object = Me.Invoke("GetTest", New Object() {Name})
            Return CType(results(0),Test)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestAsync(ByVal Name As String)
            Me.GetTestAsync(Name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestAsync(ByVal Name As String, ByVal userState As Object)
            If (Me.GetTestOperationCompleted Is Nothing) Then
                Me.GetTestOperationCompleted = AddressOf Me.OnGetTestOperationCompleted
            End If
            Me.InvokeAsync("GetTest", New Object() {Name}, Me.GetTestOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestCompleted(Me, New GetTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestByID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestByID(ByVal id As Integer) As Test
            Dim results() As Object = Me.Invoke("GetTestByID", New Object() {id})
            Return CType(results(0),Test)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestByIDAsync(ByVal id As Integer)
            Me.GetTestByIDAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestByIDAsync(ByVal id As Integer, ByVal userState As Object)
            If (Me.GetTestByIDOperationCompleted Is Nothing) Then
                Me.GetTestByIDOperationCompleted = AddressOf Me.OnGetTestByIDOperationCompleted
            End If
            Me.InvokeAsync("GetTestByID", New Object() {id}, Me.GetTestByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestByIDCompleted(Me, New GetTestByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetParametricTests", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParametricTests() As String()
            Dim results() As Object = Me.Invoke("GetParametricTests", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParametricTestsAsync()
            Me.GetParametricTestsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParametricTestsAsync(ByVal userState As Object)
            If (Me.GetParametricTestsOperationCompleted Is Nothing) Then
                Me.GetParametricTestsOperationCompleted = AddressOf Me.OnGetParametricTestsOperationCompleted
            End If
            Me.InvokeAsync("GetParametricTests", New Object(-1) {}, Me.GetParametricTestsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParametricTestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParametricTestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParametricTestsCompleted(Me, New GetParametricTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTests", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTests(ByVal trackingLocationID As Integer, ByVal jobID As Integer) As String()
            Dim results() As Object = Me.Invoke("GetTests", New Object() {trackingLocationID, jobID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestsAsync(ByVal trackingLocationID As Integer, ByVal jobID As Integer)
            Me.GetTestsAsync(trackingLocationID, jobID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestsAsync(ByVal trackingLocationID As Integer, ByVal jobID As Integer, ByVal userState As Object)
            If (Me.GetTestsOperationCompleted Is Nothing) Then
                Me.GetTestsOperationCompleted = AddressOf Me.OnGetTestsOperationCompleted
            End If
            Me.InvokeAsync("GetTests", New Object() {trackingLocationID, jobID}, Me.GetTestsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestsCompleted(Me, New GetTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestsByStation", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestsByStation(ByVal trackingLocationID As Integer) As String()
            Dim results() As Object = Me.Invoke("GetTestsByStation", New Object() {trackingLocationID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestsByStationAsync(ByVal trackingLocationID As Integer)
            Me.GetTestsByStationAsync(trackingLocationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestsByStationAsync(ByVal trackingLocationID As Integer, ByVal userState As Object)
            If (Me.GetTestsByStationOperationCompleted Is Nothing) Then
                Me.GetTestsByStationOperationCompleted = AddressOf Me.OnGetTestsByStationOperationCompleted
            End If
            Me.InvokeAsync("GetTestsByStation", New Object() {trackingLocationID}, Me.GetTestsByStationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestsByStationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestsByStationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestsByStationCompleted(Me, New GetTestsByStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestStages", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestStages() As String()
            Dim results() As Object = Me.Invoke("GetTestStages", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestStagesAsync()
            Me.GetTestStagesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestStagesAsync(ByVal userState As Object)
            If (Me.GetTestStagesOperationCompleted Is Nothing) Then
                Me.GetTestStagesOperationCompleted = AddressOf Me.OnGetTestStagesOperationCompleted
            End If
            Me.InvokeAsync("GetTestStages", New Object(-1) {}, Me.GetTestStagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestStagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestStagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestStagesCompleted(Me, New GetTestStagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestStage", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestStage(ByVal testStageName As String, ByVal jobName As String) As TestStage
            Dim results() As Object = Me.Invoke("GetTestStage", New Object() {testStageName, jobName})
            Return CType(results(0),TestStage)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestStageAsync(ByVal testStageName As String, ByVal jobName As String)
            Me.GetTestStageAsync(testStageName, jobName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestStageAsync(ByVal testStageName As String, ByVal jobName As String, ByVal userState As Object)
            If (Me.GetTestStageOperationCompleted Is Nothing) Then
                Me.GetTestStageOperationCompleted = AddressOf Me.OnGetTestStageOperationCompleted
            End If
            Me.InvokeAsync("GetTestStage", New Object() {testStageName, jobName}, Me.GetTestStageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestStageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestStageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestStageCompleted(Me, New GetTestStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetJobStages", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobStages(ByVal jobName As String) As TestStage()
            Dim results() As Object = Me.Invoke("GetJobStages", New Object() {jobName})
            Return CType(results(0),TestStage())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobStagesAsync(ByVal jobName As String)
            Me.GetJobStagesAsync(jobName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobStagesAsync(ByVal jobName As String, ByVal userState As Object)
            If (Me.GetJobStagesOperationCompleted Is Nothing) Then
                Me.GetJobStagesOperationCompleted = AddressOf Me.OnGetJobStagesOperationCompleted
            End If
            Me.InvokeAsync("GetJobStages", New Object() {jobName}, Me.GetJobStagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobStagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobStagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobStagesCompleted(Me, New GetJobStagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupIDByTypeString", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupIDByTypeString(ByVal type As String, ByVal lookup As String, ByVal parentID As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetLookupIDByTypeString", New Object() {type, lookup, parentID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupIDByTypeStringAsync(ByVal type As String, ByVal lookup As String, ByVal parentID As Integer)
            Me.GetLookupIDByTypeStringAsync(type, lookup, parentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupIDByTypeStringAsync(ByVal type As String, ByVal lookup As String, ByVal parentID As Integer, ByVal userState As Object)
            If (Me.GetLookupIDByTypeStringOperationCompleted Is Nothing) Then
                Me.GetLookupIDByTypeStringOperationCompleted = AddressOf Me.OnGetLookupIDByTypeStringOperationCompleted
            End If
            Me.InvokeAsync("GetLookupIDByTypeString", New Object() {type, lookup, parentID}, Me.GetLookupIDByTypeStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupIDByTypeStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupIDByTypeStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupIDByTypeStringCompleted(Me, New GetLookupIDByTypeStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupsTypeStringByProduct", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupsTypeStringByProduct(ByVal type As String, ByVal productID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLookupsTypeStringByProduct", New Object() {type, productID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupsTypeStringByProductAsync(ByVal type As String, ByVal productID As Integer)
            Me.GetLookupsTypeStringByProductAsync(type, productID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupsTypeStringByProductAsync(ByVal type As String, ByVal productID As Integer, ByVal userState As Object)
            If (Me.GetLookupsTypeStringByProductOperationCompleted Is Nothing) Then
                Me.GetLookupsTypeStringByProductOperationCompleted = AddressOf Me.OnGetLookupsTypeStringByProductOperationCompleted
            End If
            Me.InvokeAsync("GetLookupsTypeStringByProduct", New Object() {type, productID}, Me.GetLookupsTypeStringByProductOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupsTypeStringByProductOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupsTypeStringByProductCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupsTypeStringByProductCompleted(Me, New GetLookupsTypeStringByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupsTypeStringByProductParent", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupsTypeStringByProductParent(ByVal type As String, ByVal productID As Integer, ByVal parentID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLookupsTypeStringByProductParent", New Object() {type, productID, parentID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupsTypeStringByProductParentAsync(ByVal type As String, ByVal productID As Integer, ByVal parentID As Integer)
            Me.GetLookupsTypeStringByProductParentAsync(type, productID, parentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupsTypeStringByProductParentAsync(ByVal type As String, ByVal productID As Integer, ByVal parentID As Integer, ByVal userState As Object)
            If (Me.GetLookupsTypeStringByProductParentOperationCompleted Is Nothing) Then
                Me.GetLookupsTypeStringByProductParentOperationCompleted = AddressOf Me.OnGetLookupsTypeStringByProductParentOperationCompleted
            End If
            Me.InvokeAsync("GetLookupsTypeStringByProductParent", New Object() {type, productID, parentID}, Me.GetLookupsTypeStringByProductParentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupsTypeStringByProductParentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupsTypeStringByProductParentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupsTypeStringByProductParentCompleted(Me, New GetLookupsTypeStringByProductParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupsAdvanced", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupsAdvanced(ByVal type As String, ByVal productID As Integer, ByVal parentID As Integer, ByVal parentLookupType As String, ByVal parentLookupValue As String, ByVal requestTypeID As Integer, ByVal removeFirstAllRecord As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLookupsAdvanced", New Object() {type, productID, parentID, parentLookupType, parentLookupValue, requestTypeID, removeFirstAllRecord})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupsAdvancedAsync(ByVal type As String, ByVal productID As Integer, ByVal parentID As Integer, ByVal parentLookupType As String, ByVal parentLookupValue As String, ByVal requestTypeID As Integer, ByVal removeFirstAllRecord As Integer)
            Me.GetLookupsAdvancedAsync(type, productID, parentID, parentLookupType, parentLookupValue, requestTypeID, removeFirstAllRecord, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupsAdvancedAsync(ByVal type As String, ByVal productID As Integer, ByVal parentID As Integer, ByVal parentLookupType As String, ByVal parentLookupValue As String, ByVal requestTypeID As Integer, ByVal removeFirstAllRecord As Integer, ByVal userState As Object)
            If (Me.GetLookupsAdvancedOperationCompleted Is Nothing) Then
                Me.GetLookupsAdvancedOperationCompleted = AddressOf Me.OnGetLookupsAdvancedOperationCompleted
            End If
            Me.InvokeAsync("GetLookupsAdvanced", New Object() {type, productID, parentID, parentLookupType, parentLookupValue, requestTypeID, removeFirstAllRecord}, Me.GetLookupsAdvancedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupsAdvancedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupsAdvancedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupsAdvancedCompleted(Me, New GetLookupsAdvancedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupsByTypeString", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupsByTypeString(ByVal type As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLookupsByTypeString", New Object() {type})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupsByTypeStringAsync(ByVal type As String)
            Me.GetLookupsByTypeStringAsync(type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupsByTypeStringAsync(ByVal type As String, ByVal userState As Object)
            If (Me.GetLookupsByTypeStringOperationCompleted Is Nothing) Then
                Me.GetLookupsByTypeStringOperationCompleted = AddressOf Me.OnGetLookupsByTypeStringOperationCompleted
            End If
            Me.InvokeAsync("GetLookupsByTypeString", New Object() {type}, Me.GetLookupsByTypeStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupsByTypeStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupsByTypeStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupsByTypeStringCompleted(Me, New GetLookupsByTypeStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/SaveLookup", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveLookup(ByVal lookupType As String, ByVal value As String, ByVal isActive As Integer, ByVal description As String, ByVal parentID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("SaveLookup", New Object() {lookupType, value, isActive, description, parentID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveLookupAsync(ByVal lookupType As String, ByVal value As String, ByVal isActive As Integer, ByVal description As String, ByVal parentID As Integer)
            Me.SaveLookupAsync(lookupType, value, isActive, description, parentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveLookupAsync(ByVal lookupType As String, ByVal value As String, ByVal isActive As Integer, ByVal description As String, ByVal parentID As Integer, ByVal userState As Object)
            If (Me.SaveLookupOperationCompleted Is Nothing) Then
                Me.SaveLookupOperationCompleted = AddressOf Me.OnSaveLookupOperationCompleted
            End If
            Me.InvokeAsync("SaveLookup", New Object() {lookupType, value, isActive, description, parentID}, Me.SaveLookupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveLookupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveLookupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveLookupCompleted(Me, New SaveLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupID(ByVal type As LookupType, ByVal lookup As String, ByVal parentID As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetLookupID", New Object() {type, lookup, parentID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupIDAsync(ByVal type As LookupType, ByVal lookup As String, ByVal parentID As Integer)
            Me.GetLookupIDAsync(type, lookup, parentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupIDAsync(ByVal type As LookupType, ByVal lookup As String, ByVal parentID As Integer, ByVal userState As Object)
            If (Me.GetLookupIDOperationCompleted Is Nothing) Then
                Me.GetLookupIDOperationCompleted = AddressOf Me.OnGetLookupIDOperationCompleted
            End If
            Me.InvokeAsync("GetLookupID", New Object() {type, lookup, parentID}, Me.GetLookupIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupIDCompleted(Me, New GetLookupIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupsByProduct", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupsByProduct(ByVal type As LookupType, ByVal productID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLookupsByProduct", New Object() {type, productID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupsByProductAsync(ByVal type As LookupType, ByVal productID As Integer)
            Me.GetLookupsByProductAsync(type, productID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupsByProductAsync(ByVal type As LookupType, ByVal productID As Integer, ByVal userState As Object)
            If (Me.GetLookupsByProductOperationCompleted Is Nothing) Then
                Me.GetLookupsByProductOperationCompleted = AddressOf Me.OnGetLookupsByProductOperationCompleted
            End If
            Me.InvokeAsync("GetLookupsByProduct", New Object() {type, productID}, Me.GetLookupsByProductOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupsByProductOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupsByProductCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupsByProductCompleted(Me, New GetLookupsByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookupsByProductParent", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookupsByProductParent(ByVal type As LookupType, ByVal productID As Integer, ByVal parentID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLookupsByProductParent", New Object() {type, productID, parentID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupsByProductParentAsync(ByVal type As LookupType, ByVal productID As Integer, ByVal parentID As Integer)
            Me.GetLookupsByProductParentAsync(type, productID, parentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupsByProductParentAsync(ByVal type As LookupType, ByVal productID As Integer, ByVal parentID As Integer, ByVal userState As Object)
            If (Me.GetLookupsByProductParentOperationCompleted Is Nothing) Then
                Me.GetLookupsByProductParentOperationCompleted = AddressOf Me.OnGetLookupsByProductParentOperationCompleted
            End If
            Me.InvokeAsync("GetLookupsByProductParent", New Object() {type, productID, parentID}, Me.GetLookupsByProductParentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupsByProductParentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupsByProductParentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupsByProductParentCompleted(Me, New GetLookupsByProductParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetLookups", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLookups(ByVal type As LookupType) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLookups", New Object() {type})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLookupsAsync(ByVal type As LookupType)
            Me.GetLookupsAsync(type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLookupsAsync(ByVal type As LookupType, ByVal userState As Object)
            If (Me.GetLookupsOperationCompleted Is Nothing) Then
                Me.GetLookupsOperationCompleted = AddressOf Me.OnGetLookupsOperationCompleted
            End If
            Me.InvokeAsync("GetLookups", New Object() {type}, Me.GetLookupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLookupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLookupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLookupsCompleted(Me, New GetLookupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetJobs", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobs() As String()
            Dim results() As Object = Me.Invoke("GetJobs", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobsAsync()
            Me.GetJobsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobsAsync(ByVal userState As Object)
            If (Me.GetJobsOperationCompleted Is Nothing) Then
                Me.GetJobsOperationCompleted = AddressOf Me.OnGetJobsOperationCompleted
            End If
            Me.InvokeAsync("GetJobs", New Object(-1) {}, Me.GetJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobsCompleted(Me, New GetJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetJob", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJob(ByVal Name As String) As Job
            Dim results() As Object = Me.Invoke("GetJob", New Object() {Name})
            Return CType(results(0),Job)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobAsync(ByVal Name As String)
            Me.GetJobAsync(Name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobAsync(ByVal Name As String, ByVal userState As Object)
            If (Me.GetJobOperationCompleted Is Nothing) Then
                Me.GetJobOperationCompleted = AddressOf Me.OnGetJobOperationCompleted
            End If
            Me.InvokeAsync("GetJob", New Object() {Name}, Me.GetJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobCompleted(Me, New GetJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetOrientationsByJob", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrientationsByJob(ByVal JobName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetOrientationsByJob", New Object() {JobName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrientationsByJobAsync(ByVal JobName As String)
            Me.GetOrientationsByJobAsync(JobName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrientationsByJobAsync(ByVal JobName As String, ByVal userState As Object)
            If (Me.GetOrientationsByJobOperationCompleted Is Nothing) Then
                Me.GetOrientationsByJobOperationCompleted = AddressOf Me.OnGetOrientationsByJobOperationCompleted
            End If
            Me.InvokeAsync("GetOrientationsByJob", New Object() {JobName}, Me.GetOrientationsByJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrientationsByJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrientationsByJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrientationsByJobCompleted(Me, New GetOrientationsByJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetJobAccess", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobAccess(ByVal jobID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetJobAccess", New Object() {jobID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobAccessAsync(ByVal jobID As Integer)
            Me.GetJobAccessAsync(jobID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobAccessAsync(ByVal jobID As Integer, ByVal userState As Object)
            If (Me.GetJobAccessOperationCompleted Is Nothing) Then
                Me.GetJobAccessOperationCompleted = AddressOf Me.OnGetJobAccessOperationCompleted
            End If
            Me.InvokeAsync("GetJobAccess", New Object() {jobID}, Me.GetJobAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobAccessCompleted(Me, New GetJobAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/SaveJob", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveJob(ByVal job As Job, ByVal userIdentification As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveJob", New Object() {job, userIdentification})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveJobAsync(ByVal job As Job, ByVal userIdentification As String)
            Me.SaveJobAsync(job, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveJobAsync(ByVal job As Job, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.SaveJobOperationCompleted Is Nothing) Then
                Me.SaveJobOperationCompleted = AddressOf Me.OnSaveJobOperationCompleted
            End If
            Me.InvokeAsync("SaveJob", New Object() {job, userIdentification}, Me.SaveJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveJobCompleted(Me, New SaveJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetUserDetails", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserDetails(ByVal userIdentification As String, ByVal trackingLocationHostName As String) As UserDetails
            Dim results() As Object = Me.Invoke("GetUserDetails", New Object() {userIdentification, trackingLocationHostName})
            Return CType(results(0),UserDetails)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserDetailsAsync(ByVal userIdentification As String, ByVal trackingLocationHostName As String)
            Me.GetUserDetailsAsync(userIdentification, trackingLocationHostName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserDetailsAsync(ByVal userIdentification As String, ByVal trackingLocationHostName As String, ByVal userState As Object)
            If (Me.GetUserDetailsOperationCompleted Is Nothing) Then
                Me.GetUserDetailsOperationCompleted = AddressOf Me.OnGetUserDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetUserDetails", New Object() {userIdentification, trackingLocationHostName}, Me.GetUserDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserDetailsCompleted(Me, New GetUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetUserDetails2", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserDetails2(ByVal userIdentification As String, ByVal trackingLocationHostName As String, ByVal trackingLocationName As String) As UserDetails
            Dim results() As Object = Me.Invoke("GetUserDetails2", New Object() {userIdentification, trackingLocationHostName, trackingLocationName})
            Return CType(results(0),UserDetails)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserDetails2Async(ByVal userIdentification As String, ByVal trackingLocationHostName As String, ByVal trackingLocationName As String)
            Me.GetUserDetails2Async(userIdentification, trackingLocationHostName, trackingLocationName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserDetails2Async(ByVal userIdentification As String, ByVal trackingLocationHostName As String, ByVal trackingLocationName As String, ByVal userState As Object)
            If (Me.GetUserDetails2OperationCompleted Is Nothing) Then
                Me.GetUserDetails2OperationCompleted = AddressOf Me.OnGetUserDetails2OperationCompleted
            End If
            Me.InvokeAsync("GetUserDetails2", New Object() {userIdentification, trackingLocationHostName, trackingLocationName}, Me.GetUserDetails2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserDetails2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserDetails2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserDetails2Completed(Me, New GetUserDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetUser", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUser(ByVal userIdentification As String) As User
            Dim results() As Object = Me.Invoke("GetUser", New Object() {userIdentification})
            Return CType(results(0),User)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAsync(ByVal userIdentification As String)
            Me.GetUserAsync(userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAsync(ByVal userIdentification As String, ByVal userState As Object)
            If (Me.GetUserOperationCompleted Is Nothing) Then
                Me.GetUserOperationCompleted = AddressOf Me.OnGetUserOperationCompleted
            End If
            Me.InvokeAsync("GetUser", New Object() {userIdentification}, Me.GetUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserCompleted(Me, New GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetFriendlyUserID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFriendlyUserID(ByVal userIdentification As String) As String
            Dim results() As Object = Me.Invoke("GetFriendlyUserID", New Object() {userIdentification})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFriendlyUserIDAsync(ByVal userIdentification As String)
            Me.GetFriendlyUserIDAsync(userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFriendlyUserIDAsync(ByVal userIdentification As String, ByVal userState As Object)
            If (Me.GetFriendlyUserIDOperationCompleted Is Nothing) Then
                Me.GetFriendlyUserIDOperationCompleted = AddressOf Me.OnGetFriendlyUserIDOperationCompleted
            End If
            Me.InvokeAsync("GetFriendlyUserID", New Object() {userIdentification}, Me.GetFriendlyUserIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFriendlyUserIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFriendlyUserIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFriendlyUserIDCompleted(Me, New GetFriendlyUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/UpdateProduct", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateProduct(ByVal productGroupName As String, ByVal isActive As Integer, ByVal productID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("UpdateProduct", New Object() {productGroupName, isActive, productID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateProductAsync(ByVal productGroupName As String, ByVal isActive As Integer, ByVal productID As Integer)
            Me.UpdateProductAsync(productGroupName, isActive, productID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateProductAsync(ByVal productGroupName As String, ByVal isActive As Integer, ByVal productID As Integer, ByVal userState As Object)
            If (Me.UpdateProductOperationCompleted Is Nothing) Then
                Me.UpdateProductOperationCompleted = AddressOf Me.OnUpdateProductOperationCompleted
            End If
            Me.InvokeAsync("UpdateProduct", New Object() {productGroupName, isActive, productID}, Me.UpdateProductOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateProductOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateProductCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateProductCompleted(Me, New UpdateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductGroups", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductGroups() As String()
            Dim results() As Object = Me.Invoke("GetProductGroups", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductGroupsAsync()
            Me.GetProductGroupsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductGroupsAsync(ByVal userState As Object)
            If (Me.GetProductGroupsOperationCompleted Is Nothing) Then
                Me.GetProductGroupsOperationCompleted = AddressOf Me.OnGetProductGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetProductGroups", New Object(-1) {}, Me.GetProductGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductGroupsCompleted(Me, New GetProductGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductGroupsDataTable", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductGroupsDataTable() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetProductGroupsDataTable", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductGroupsDataTableAsync()
            Me.GetProductGroupsDataTableAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductGroupsDataTableAsync(ByVal userState As Object)
            If (Me.GetProductGroupsDataTableOperationCompleted Is Nothing) Then
                Me.GetProductGroupsDataTableOperationCompleted = AddressOf Me.OnGetProductGroupsDataTableOperationCompleted
            End If
            Me.InvokeAsync("GetProductGroupsDataTable", New Object(-1) {}, Me.GetProductGroupsDataTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductGroupsDataTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductGroupsDataTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductGroupsDataTableCompleted(Me, New GetProductGroupsDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductIDByName", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductIDByName(ByVal productGroupName As String) As Integer
            Dim results() As Object = Me.Invoke("GetProductIDByName", New Object() {productGroupName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductIDByNameAsync(ByVal productGroupName As String)
            Me.GetProductIDByNameAsync(productGroupName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductIDByNameAsync(ByVal productGroupName As String, ByVal userState As Object)
            If (Me.GetProductIDByNameOperationCompleted Is Nothing) Then
                Me.GetProductIDByNameOperationCompleted = AddressOf Me.OnGetProductIDByNameOperationCompleted
            End If
            Me.InvokeAsync("GetProductIDByName", New Object() {productGroupName}, Me.GetProductIDByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductIDByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductIDByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductIDByNameCompleted(Me, New GetProductIDByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductSettingsByProductID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductSettingsByProductID(ByVal productID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetProductSettingsByProductID", New Object() {productID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingsByProductIDAsync(ByVal productID As Integer)
            Me.GetProductSettingsByProductIDAsync(productID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingsByProductIDAsync(ByVal productID As Integer, ByVal userState As Object)
            If (Me.GetProductSettingsByProductIDOperationCompleted Is Nothing) Then
                Me.GetProductSettingsByProductIDOperationCompleted = AddressOf Me.OnGetProductSettingsByProductIDOperationCompleted
            End If
            Me.InvokeAsync("GetProductSettingsByProductID", New Object() {productID}, Me.GetProductSettingsByProductIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductSettingsByProductIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductSettingsByProductIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductSettingsByProductIDCompleted(Me, New GetProductSettingsByProductIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductSettings", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductSettings(ByVal productGroupName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetProductSettings", New Object() {productGroupName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingsAsync(ByVal productGroupName As String)
            Me.GetProductSettingsAsync(productGroupName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingsAsync(ByVal productGroupName As String, ByVal userState As Object)
            If (Me.GetProductSettingsOperationCompleted Is Nothing) Then
                Me.GetProductSettingsOperationCompleted = AddressOf Me.OnGetProductSettingsOperationCompleted
            End If
            Me.InvokeAsync("GetProductSettings", New Object() {productGroupName}, Me.GetProductSettingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductSettingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductSettingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductSettingsCompleted(Me, New GetProductSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductSetting", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductSetting(ByVal productGroupName As String, ByVal keyName As String) As String
            Dim results() As Object = Me.Invoke("GetProductSetting", New Object() {productGroupName, keyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingAsync(ByVal productGroupName As String, ByVal keyName As String)
            Me.GetProductSettingAsync(productGroupName, keyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingAsync(ByVal productGroupName As String, ByVal keyName As String, ByVal userState As Object)
            If (Me.GetProductSettingOperationCompleted Is Nothing) Then
                Me.GetProductSettingOperationCompleted = AddressOf Me.OnGetProductSettingOperationCompleted
            End If
            Me.InvokeAsync("GetProductSetting", New Object() {productGroupName, keyName}, Me.GetProductSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductSettingCompleted(Me, New GetProductSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductSettingByProductID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductSettingByProductID(ByVal productID As Integer, ByVal keyName As String) As String
            Dim results() As Object = Me.Invoke("GetProductSettingByProductID", New Object() {productID, keyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingByProductIDAsync(ByVal productID As Integer, ByVal keyName As String)
            Me.GetProductSettingByProductIDAsync(productID, keyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductSettingByProductIDAsync(ByVal productID As Integer, ByVal keyName As String, ByVal userState As Object)
            If (Me.GetProductSettingByProductIDOperationCompleted Is Nothing) Then
                Me.GetProductSettingByProductIDOperationCompleted = AddressOf Me.OnGetProductSettingByProductIDOperationCompleted
            End If
            Me.InvokeAsync("GetProductSettingByProductID", New Object() {productID, keyName}, Me.GetProductSettingByProductIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductSettingByProductIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductSettingByProductIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductSettingByProductIDCompleted(Me, New GetProductSettingByProductIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetBatchUnitsInStage", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBatchUnitsInStage(ByVal qraNumber As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetBatchUnitsInStage", New Object() {qraNumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBatchUnitsInStageAsync(ByVal qraNumber As String)
            Me.GetBatchUnitsInStageAsync(qraNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBatchUnitsInStageAsync(ByVal qraNumber As String, ByVal userState As Object)
            If (Me.GetBatchUnitsInStageOperationCompleted Is Nothing) Then
                Me.GetBatchUnitsInStageOperationCompleted = AddressOf Me.OnGetBatchUnitsInStageOperationCompleted
            End If
            Me.InvokeAsync("GetBatchUnitsInStage", New Object() {qraNumber}, Me.GetBatchUnitsInStageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBatchUnitsInStageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBatchUnitsInStageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBatchUnitsInStageCompleted(Me, New GetBatchUnitsInStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/BatchUpdateOrientation", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BatchUpdateOrientation(ByVal requestNumber As String, ByVal orientationID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("BatchUpdateOrientation", New Object() {requestNumber, orientationID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BatchUpdateOrientationAsync(ByVal requestNumber As String, ByVal orientationID As Integer)
            Me.BatchUpdateOrientationAsync(requestNumber, orientationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BatchUpdateOrientationAsync(ByVal requestNumber As String, ByVal orientationID As Integer, ByVal userState As Object)
            If (Me.BatchUpdateOrientationOperationCompleted Is Nothing) Then
                Me.BatchUpdateOrientationOperationCompleted = AddressOf Me.OnBatchUpdateOrientationOperationCompleted
            End If
            Me.InvokeAsync("BatchUpdateOrientation", New Object() {requestNumber, orientationID}, Me.BatchUpdateOrientationOperationCompleted, userState)
        End Sub
        
        Private Sub OnBatchUpdateOrientationOperationCompleted(ByVal arg As Object)
            If (Not (Me.BatchUpdateOrientationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BatchUpdateOrientationCompleted(Me, New BatchUpdateOrientationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestingSummary", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestingSummary(ByVal qraNumber As String, ByVal userIdentification As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTestingSummary", New Object() {qraNumber, userIdentification})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestingSummaryAsync(ByVal qraNumber As String, ByVal userIdentification As String)
            Me.GetTestingSummaryAsync(qraNumber, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestingSummaryAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.GetTestingSummaryOperationCompleted Is Nothing) Then
                Me.GetTestingSummaryOperationCompleted = AddressOf Me.OnGetTestingSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetTestingSummary", New Object() {qraNumber, userIdentification}, Me.GetTestingSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestingSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestingSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestingSummaryCompleted(Me, New GetTestingSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetStressingSummary", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStressingSummary(ByVal qraNumber As String, ByVal userIdentification As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetStressingSummary", New Object() {qraNumber, userIdentification})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStressingSummaryAsync(ByVal qraNumber As String, ByVal userIdentification As String)
            Me.GetStressingSummaryAsync(qraNumber, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStressingSummaryAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.GetStressingSummaryOperationCompleted Is Nothing) Then
                Me.GetStressingSummaryOperationCompleted = AddressOf Me.OnGetStressingSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetStressingSummary", New Object() {qraNumber, userIdentification}, Me.GetStressingSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStressingSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStressingSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStressingSummaryCompleted(Me, New GetStressingSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/BatchStartedBeforeAssigned", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BatchStartedBeforeAssigned(ByVal qraNumber As String) As Boolean
            Dim results() As Object = Me.Invoke("BatchStartedBeforeAssigned", New Object() {qraNumber})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BatchStartedBeforeAssignedAsync(ByVal qraNumber As String)
            Me.BatchStartedBeforeAssignedAsync(qraNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BatchStartedBeforeAssignedAsync(ByVal qraNumber As String, ByVal userState As Object)
            If (Me.BatchStartedBeforeAssignedOperationCompleted Is Nothing) Then
                Me.BatchStartedBeforeAssignedOperationCompleted = AddressOf Me.OnBatchStartedBeforeAssignedOperationCompleted
            End If
            Me.InvokeAsync("BatchStartedBeforeAssigned", New Object() {qraNumber}, Me.BatchStartedBeforeAssignedOperationCompleted, userState)
        End Sub
        
        Private Sub OnBatchStartedBeforeAssignedOperationCompleted(ByVal arg As Object)
            If (Not (Me.BatchStartedBeforeAssignedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BatchStartedBeforeAssignedCompleted(Me, New BatchStartedBeforeAssignedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetDefaultReqNum", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDefaultReqNum() As String
            Dim results() As Object = Me.Invoke("GetDefaultReqNum", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDefaultReqNumAsync()
            Me.GetDefaultReqNumAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDefaultReqNumAsync(ByVal userState As Object)
            If (Me.GetDefaultReqNumOperationCompleted Is Nothing) Then
                Me.GetDefaultReqNumOperationCompleted = AddressOf Me.OnGetDefaultReqNumOperationCompleted
            End If
            Me.InvokeAsync("GetDefaultReqNum", New Object(-1) {}, Me.GetDefaultReqNumOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDefaultReqNumOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDefaultReqNumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDefaultReqNumCompleted(Me, New GetDefaultReqNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetDefaultReqNumWithUnit", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDefaultReqNumWithUnit() As String
            Dim results() As Object = Me.Invoke("GetDefaultReqNumWithUnit", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDefaultReqNumWithUnitAsync()
            Me.GetDefaultReqNumWithUnitAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDefaultReqNumWithUnitAsync(ByVal userState As Object)
            If (Me.GetDefaultReqNumWithUnitOperationCompleted Is Nothing) Then
                Me.GetDefaultReqNumWithUnitOperationCompleted = AddressOf Me.OnGetDefaultReqNumWithUnitOperationCompleted
            End If
            Me.InvokeAsync("GetDefaultReqNumWithUnit", New Object(-1) {}, Me.GetDefaultReqNumWithUnitOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDefaultReqNumWithUnitOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDefaultReqNumWithUnitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDefaultReqNumWithUnitCompleted(Me, New GetDefaultReqNumWithUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetProductTypeID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductTypeID(ByVal qraNumber As String) As Integer
            Dim results() As Object = Me.Invoke("GetProductTypeID", New Object() {qraNumber})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductTypeIDAsync(ByVal qraNumber As String)
            Me.GetProductTypeIDAsync(qraNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductTypeIDAsync(ByVal qraNumber As String, ByVal userState As Object)
            If (Me.GetProductTypeIDOperationCompleted Is Nothing) Then
                Me.GetProductTypeIDOperationCompleted = AddressOf Me.OnGetProductTypeIDOperationCompleted
            End If
            Me.InvokeAsync("GetProductTypeID", New Object() {qraNumber}, Me.GetProductTypeIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductTypeIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductTypeIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductTypeIDCompleted(Me, New GetProductTypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestCenterID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestCenterID(ByVal qraNumber As String) As Integer
            Dim results() As Object = Me.Invoke("GetTestCenterID", New Object() {qraNumber})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestCenterIDAsync(ByVal qraNumber As String)
            Me.GetTestCenterIDAsync(qraNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestCenterIDAsync(ByVal qraNumber As String, ByVal userState As Object)
            If (Me.GetTestCenterIDOperationCompleted Is Nothing) Then
                Me.GetTestCenterIDOperationCompleted = AddressOf Me.OnGetTestCenterIDOperationCompleted
            End If
            Me.InvokeAsync("GetTestCenterID", New Object() {qraNumber}, Me.GetTestCenterIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestCenterIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestCenterIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestCenterIDCompleted(Me, New GetTestCenterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetAccessoryTypeID", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccessoryTypeID(ByVal qraNumber As String) As Integer
            Dim results() As Object = Me.Invoke("GetAccessoryTypeID", New Object() {qraNumber})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccessoryTypeIDAsync(ByVal qraNumber As String)
            Me.GetAccessoryTypeIDAsync(qraNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccessoryTypeIDAsync(ByVal qraNumber As String, ByVal userState As Object)
            If (Me.GetAccessoryTypeIDOperationCompleted Is Nothing) Then
                Me.GetAccessoryTypeIDOperationCompleted = AddressOf Me.OnGetAccessoryTypeIDOperationCompleted
            End If
            Me.InvokeAsync("GetAccessoryTypeID", New Object() {qraNumber}, Me.GetAccessoryTypeIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccessoryTypeIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccessoryTypeIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccessoryTypeIDCompleted(Me, New GetAccessoryTypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBatch(ByVal QRANumber As String) As BatchView
            Dim results() As Object = Me.Invoke("GetBatch", New Object() {QRANumber})
            Return CType(results(0),BatchView)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBatchAsync(ByVal QRANumber As String)
            Me.GetBatchAsync(QRANumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBatchAsync(ByVal QRANumber As String, ByVal userState As Object)
            If (Me.GetBatchOperationCompleted Is Nothing) Then
                Me.GetBatchOperationCompleted = AddressOf Me.OnGetBatchOperationCompleted
            End If
            Me.InvokeAsync("GetBatch", New Object() {QRANumber}, Me.GetBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBatchCompleted(Me, New GetBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetBatchNotifications", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBatchNotifications(ByVal QRANumber As String) As Notification()
            Dim results() As Object = Me.Invoke("GetBatchNotifications", New Object() {QRANumber})
            Return CType(results(0),Notification())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBatchNotificationsAsync(ByVal QRANumber As String)
            Me.GetBatchNotificationsAsync(QRANumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBatchNotificationsAsync(ByVal QRANumber As String, ByVal userState As Object)
            If (Me.GetBatchNotificationsOperationCompleted Is Nothing) Then
                Me.GetBatchNotificationsOperationCompleted = AddressOf Me.OnGetBatchNotificationsOperationCompleted
            End If
            Me.InvokeAsync("GetBatchNotifications", New Object() {QRANumber}, Me.GetBatchNotificationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBatchNotificationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBatchNotificationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBatchNotificationsCompleted(Me, New GetBatchNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetBatchComments", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBatchComments(ByVal QRANumber As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetBatchComments", New Object() {QRANumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBatchCommentsAsync(ByVal QRANumber As String)
            Me.GetBatchCommentsAsync(QRANumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBatchCommentsAsync(ByVal QRANumber As String, ByVal userState As Object)
            If (Me.GetBatchCommentsOperationCompleted Is Nothing) Then
                Me.GetBatchCommentsOperationCompleted = AddressOf Me.OnGetBatchCommentsOperationCompleted
            End If
            Me.InvokeAsync("GetBatchComments", New Object() {QRANumber}, Me.GetBatchCommentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBatchCommentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBatchCommentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBatchCommentsCompleted(Me, New GetBatchCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetHardwareRevision", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHardwareRevision(ByVal QRANumber As String) As String
            Dim results() As Object = Me.Invoke("GetHardwareRevision", New Object() {QRANumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHardwareRevisionAsync(ByVal QRANumber As String)
            Me.GetHardwareRevisionAsync(QRANumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHardwareRevisionAsync(ByVal QRANumber As String, ByVal userState As Object)
            If (Me.GetHardwareRevisionOperationCompleted Is Nothing) Then
                Me.GetHardwareRevisionOperationCompleted = AddressOf Me.OnGetHardwareRevisionOperationCompleted
            End If
            Me.InvokeAsync("GetHardwareRevision", New Object() {QRANumber}, Me.GetHardwareRevisionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHardwareRevisionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHardwareRevisionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHardwareRevisionCompleted(Me, New GetHardwareRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetCPRNumber", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCPRNumber(ByVal QRANumber As String) As String
            Dim results() As Object = Me.Invoke("GetCPRNumber", New Object() {QRANumber})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCPRNumberAsync(ByVal QRANumber As String)
            Me.GetCPRNumberAsync(QRANumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCPRNumberAsync(ByVal QRANumber As String, ByVal userState As Object)
            If (Me.GetCPRNumberOperationCompleted Is Nothing) Then
                Me.GetCPRNumberOperationCompleted = AddressOf Me.OnGetCPRNumberOperationCompleted
            End If
            Me.InvokeAsync("GetCPRNumber", New Object() {QRANumber}, Me.GetCPRNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCPRNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCPRNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCPRNumberCompleted(Me, New GetCPRNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetBatchNextStage", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBatchNextStage(ByVal requestNumber As String) As TestStage
            Dim results() As Object = Me.Invoke("GetBatchNextStage", New Object() {requestNumber})
            Return CType(results(0),TestStage)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBatchNextStageAsync(ByVal requestNumber As String)
            Me.GetBatchNextStageAsync(requestNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBatchNextStageAsync(ByVal requestNumber As String, ByVal userState As Object)
            If (Me.GetBatchNextStageOperationCompleted Is Nothing) Then
                Me.GetBatchNextStageOperationCompleted = AddressOf Me.OnGetBatchNextStageOperationCompleted
            End If
            Me.InvokeAsync("GetBatchNextStage", New Object() {requestNumber}, Me.GetBatchNextStageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBatchNextStageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBatchNextStageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBatchNextStageCompleted(Me, New GetBatchNextStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestStagesNameByBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestStagesNameByBatch(ByVal requestNumber As String) As String()
            Dim results() As Object = Me.Invoke("GetTestStagesNameByBatch", New Object() {requestNumber})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestStagesNameByBatchAsync(ByVal requestNumber As String)
            Me.GetTestStagesNameByBatchAsync(requestNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestStagesNameByBatchAsync(ByVal requestNumber As String, ByVal userState As Object)
            If (Me.GetTestStagesNameByBatchOperationCompleted Is Nothing) Then
                Me.GetTestStagesNameByBatchOperationCompleted = AddressOf Me.OnGetTestStagesNameByBatchOperationCompleted
            End If
            Me.InvokeAsync("GetTestStagesNameByBatch", New Object() {requestNumber}, Me.GetTestStagesNameByBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestStagesNameByBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestStagesNameByBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestStagesNameByBatchCompleted(Me, New GetTestStagesNameByBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestStagesByBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestStagesByBatch(ByVal requestNumber As String) As TestStage()
            Dim results() As Object = Me.Invoke("GetTestStagesByBatch", New Object() {requestNumber})
            Return CType(results(0),TestStage())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestStagesByBatchAsync(ByVal requestNumber As String)
            Me.GetTestStagesByBatchAsync(requestNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestStagesByBatchAsync(ByVal requestNumber As String, ByVal userState As Object)
            If (Me.GetTestStagesByBatchOperationCompleted Is Nothing) Then
                Me.GetTestStagesByBatchOperationCompleted = AddressOf Me.OnGetTestStagesByBatchOperationCompleted
            End If
            Me.InvokeAsync("GetTestStagesByBatch", New Object() {requestNumber}, Me.GetTestStagesByBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestStagesByBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestStagesByBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestStagesByBatchCompleted(Me, New GetTestStagesByBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetStagesNeedingCompletionByUnit", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStagesNeedingCompletionByUnit(ByVal requestNumber As String, ByVal unitNumber As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStagesNeedingCompletionByUnit", New Object() {requestNumber, unitNumber})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStagesNeedingCompletionByUnitAsync(ByVal requestNumber As String, ByVal unitNumber As Integer)
            Me.GetStagesNeedingCompletionByUnitAsync(requestNumber, unitNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStagesNeedingCompletionByUnitAsync(ByVal requestNumber As String, ByVal unitNumber As Integer, ByVal userState As Object)
            If (Me.GetStagesNeedingCompletionByUnitOperationCompleted Is Nothing) Then
                Me.GetStagesNeedingCompletionByUnitOperationCompleted = AddressOf Me.OnGetStagesNeedingCompletionByUnitOperationCompleted
            End If
            Me.InvokeAsync("GetStagesNeedingCompletionByUnit", New Object() {requestNumber, unitNumber}, Me.GetStagesNeedingCompletionByUnitOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStagesNeedingCompletionByUnitOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStagesNeedingCompletionByUnitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStagesNeedingCompletionByUnitCompleted(Me, New GetStagesNeedingCompletionByUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestsByBatchStage", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestsByBatchStage(ByVal requestNumber As String, ByVal testStageName As String) As String()
            Dim results() As Object = Me.Invoke("GetTestsByBatchStage", New Object() {requestNumber, testStageName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestsByBatchStageAsync(ByVal requestNumber As String, ByVal testStageName As String)
            Me.GetTestsByBatchStageAsync(requestNumber, testStageName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestsByBatchStageAsync(ByVal requestNumber As String, ByVal testStageName As String, ByVal userState As Object)
            If (Me.GetTestsByBatchStageOperationCompleted Is Nothing) Then
                Me.GetTestsByBatchStageOperationCompleted = AddressOf Me.OnGetTestsByBatchStageOperationCompleted
            End If
            Me.InvokeAsync("GetTestsByBatchStage", New Object() {requestNumber, testStageName}, Me.GetTestsByBatchStageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestsByBatchStageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestsByBatchStageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestsByBatchStageCompleted(Me, New GetTestsByBatchStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestsByBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestsByBatch(ByVal requestNumber As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTestsByBatch", New Object() {requestNumber})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestsByBatchAsync(ByVal requestNumber As String)
            Me.GetTestsByBatchAsync(requestNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestsByBatchAsync(ByVal requestNumber As String, ByVal userState As Object)
            If (Me.GetTestsByBatchOperationCompleted Is Nothing) Then
                Me.GetTestsByBatchOperationCompleted = AddressOf Me.OnGetTestsByBatchOperationCompleted
            End If
            Me.InvokeAsync("GetTestsByBatch", New Object() {requestNumber}, Me.GetTestsByBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestsByBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestsByBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestsByBatchCompleted(Me, New GetTestsByBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/SaveBatchComment", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveBatchComment(ByVal qraNumber As String, ByVal userIdentification As String, ByVal comment As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveBatchComment", New Object() {qraNumber, userIdentification, comment})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveBatchCommentAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal comment As String)
            Me.SaveBatchCommentAsync(qraNumber, userIdentification, comment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveBatchCommentAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal comment As String, ByVal userState As Object)
            If (Me.SaveBatchCommentOperationCompleted Is Nothing) Then
                Me.SaveBatchCommentOperationCompleted = AddressOf Me.OnSaveBatchCommentOperationCompleted
            End If
            Me.InvokeAsync("SaveBatchComment", New Object() {qraNumber, userIdentification, comment}, Me.SaveBatchCommentOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveBatchCommentOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveBatchCommentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveBatchCommentCompleted(Me, New SaveBatchCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/DNPParametricForBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DNPParametricForBatch(ByVal qraNumber As String, ByVal userIdentification As String, ByVal unitNumber As Integer) As Boolean
            Dim results() As Object = Me.Invoke("DNPParametricForBatch", New Object() {qraNumber, userIdentification, unitNumber})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DNPParametricForBatchAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal unitNumber As Integer)
            Me.DNPParametricForBatchAsync(qraNumber, userIdentification, unitNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DNPParametricForBatchAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal unitNumber As Integer, ByVal userState As Object)
            If (Me.DNPParametricForBatchOperationCompleted Is Nothing) Then
                Me.DNPParametricForBatchOperationCompleted = AddressOf Me.OnDNPParametricForBatchOperationCompleted
            End If
            Me.InvokeAsync("DNPParametricForBatch", New Object() {qraNumber, userIdentification, unitNumber}, Me.DNPParametricForBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnDNPParametricForBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.DNPParametricForBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DNPParametricForBatchCompleted(Me, New DNPParametricForBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetPercentageCompleteForBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPercentageCompleteForBatch(ByVal qraNumber As String) As Integer
            Dim results() As Object = Me.Invoke("GetPercentageCompleteForBatch", New Object() {qraNumber})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPercentageCompleteForBatchAsync(ByVal qraNumber As String)
            Me.GetPercentageCompleteForBatchAsync(qraNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPercentageCompleteForBatchAsync(ByVal qraNumber As String, ByVal userState As Object)
            If (Me.GetPercentageCompleteForBatchOperationCompleted Is Nothing) Then
                Me.GetPercentageCompleteForBatchOperationCompleted = AddressOf Me.OnGetPercentageCompleteForBatchOperationCompleted
            End If
            Me.InvokeAsync("GetPercentageCompleteForBatch", New Object() {qraNumber}, Me.GetPercentageCompleteForBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPercentageCompleteForBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPercentageCompleteForBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPercentageCompleteForBatchCompleted(Me, New GetPercentageCompleteForBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetActiveBatchList", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveBatchList() As String()
            Dim results() As Object = Me.Invoke("GetActiveBatchList", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveBatchListAsync()
            Me.GetActiveBatchListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveBatchListAsync(ByVal userState As Object)
            If (Me.GetActiveBatchListOperationCompleted Is Nothing) Then
                Me.GetActiveBatchListOperationCompleted = AddressOf Me.OnGetActiveBatchListOperationCompleted
            End If
            Me.InvokeAsync("GetActiveBatchList", New Object(-1) {}, Me.GetActiveBatchListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveBatchListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveBatchListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveBatchListCompleted(Me, New GetActiveBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetRequestsNotInREMI", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRequestsNotInREMI(ByVal searchStr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRequestsNotInREMI", New Object() {searchStr})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRequestsNotInREMIAsync(ByVal searchStr As String)
            Me.GetRequestsNotInREMIAsync(searchStr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRequestsNotInREMIAsync(ByVal searchStr As String, ByVal userState As Object)
            If (Me.GetRequestsNotInREMIOperationCompleted Is Nothing) Then
                Me.GetRequestsNotInREMIOperationCompleted = AddressOf Me.OnGetRequestsNotInREMIOperationCompleted
            End If
            Me.InvokeAsync("GetRequestsNotInREMI", New Object() {searchStr}, Me.GetRequestsNotInREMIOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRequestsNotInREMIOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRequestsNotInREMICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRequestsNotInREMICompleted(Me, New GetRequestsNotInREMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetRequestsForDashBoard", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRequestsForDashBoard(ByVal searchStr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRequestsForDashBoard", New Object() {searchStr})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRequestsForDashBoardAsync(ByVal searchStr As String)
            Me.GetRequestsForDashBoardAsync(searchStr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRequestsForDashBoardAsync(ByVal searchStr As String, ByVal userState As Object)
            If (Me.GetRequestsForDashBoardOperationCompleted Is Nothing) Then
                Me.GetRequestsForDashBoardOperationCompleted = AddressOf Me.OnGetRequestsForDashBoardOperationCompleted
            End If
            Me.InvokeAsync("GetRequestsForDashBoard", New Object() {searchStr}, Me.GetRequestsForDashBoardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRequestsForDashBoardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRequestsForDashBoardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRequestsForDashBoardCompleted(Me, New GetRequestsForDashBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/CheckBatchForStatusUpdates", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckBatchForStatusUpdates(ByVal qraNumber As String, ByVal userIdentification As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckBatchForStatusUpdates", New Object() {qraNumber, userIdentification})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckBatchForStatusUpdatesAsync(ByVal qraNumber As String, ByVal userIdentification As String)
            Me.CheckBatchForStatusUpdatesAsync(qraNumber, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckBatchForStatusUpdatesAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.CheckBatchForStatusUpdatesOperationCompleted Is Nothing) Then
                Me.CheckBatchForStatusUpdatesOperationCompleted = AddressOf Me.OnCheckBatchForStatusUpdatesOperationCompleted
            End If
            Me.InvokeAsync("CheckBatchForStatusUpdates", New Object() {qraNumber, userIdentification}, Me.CheckBatchForStatusUpdatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckBatchForStatusUpdatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckBatchForStatusUpdatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckBatchForStatusUpdatesCompleted(Me, New CheckBatchForStatusUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/Scan", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Scan(ByVal qraNumber As String, ByVal testStageName As String, ByVal testName As String, ByVal overallTestResult As String, ByVal userIdentification As String, ByVal locationIdenitifcation As String, ByVal trackingLocationName As String) As ScanReturnData
            Dim results() As Object = Me.Invoke("Scan", New Object() {qraNumber, testStageName, testName, overallTestResult, userIdentification, locationIdenitifcation, trackingLocationName})
            Return CType(results(0),ScanReturnData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ScanAsync(ByVal qraNumber As String, ByVal testStageName As String, ByVal testName As String, ByVal overallTestResult As String, ByVal userIdentification As String, ByVal locationIdenitifcation As String, ByVal trackingLocationName As String)
            Me.ScanAsync(qraNumber, testStageName, testName, overallTestResult, userIdentification, locationIdenitifcation, trackingLocationName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ScanAsync(ByVal qraNumber As String, ByVal testStageName As String, ByVal testName As String, ByVal overallTestResult As String, ByVal userIdentification As String, ByVal locationIdenitifcation As String, ByVal trackingLocationName As String, ByVal userState As Object)
            If (Me.ScanOperationCompleted Is Nothing) Then
                Me.ScanOperationCompleted = AddressOf Me.OnScanOperationCompleted
            End If
            Me.InvokeAsync("Scan", New Object() {qraNumber, testStageName, testName, overallTestResult, userIdentification, locationIdenitifcation, trackingLocationName}, Me.ScanOperationCompleted, userState)
        End Sub
        
        Private Sub OnScanOperationCompleted(ByVal arg As Object)
            If (Not (Me.ScanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ScanCompleted(Me, New ScanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/ScanAdvanced", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ScanAdvanced(ByVal qraNumber As String, ByVal testStageName As String, ByVal testName As String, ByVal overallTestResult As String, ByVal userIdentification As String, ByVal locationIdenitifcation As String, ByVal trackingLocationName As String, ByVal jobName As String, ByVal productGroup As String) As ScanReturnData
            Dim results() As Object = Me.Invoke("ScanAdvanced", New Object() {qraNumber, testStageName, testName, overallTestResult, userIdentification, locationIdenitifcation, trackingLocationName, jobName, productGroup})
            Return CType(results(0),ScanReturnData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ScanAdvancedAsync(ByVal qraNumber As String, ByVal testStageName As String, ByVal testName As String, ByVal overallTestResult As String, ByVal userIdentification As String, ByVal locationIdenitifcation As String, ByVal trackingLocationName As String, ByVal jobName As String, ByVal productGroup As String)
            Me.ScanAdvancedAsync(qraNumber, testStageName, testName, overallTestResult, userIdentification, locationIdenitifcation, trackingLocationName, jobName, productGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ScanAdvancedAsync(ByVal qraNumber As String, ByVal testStageName As String, ByVal testName As String, ByVal overallTestResult As String, ByVal userIdentification As String, ByVal locationIdenitifcation As String, ByVal trackingLocationName As String, ByVal jobName As String, ByVal productGroup As String, ByVal userState As Object)
            If (Me.ScanAdvancedOperationCompleted Is Nothing) Then
                Me.ScanAdvancedOperationCompleted = AddressOf Me.OnScanAdvancedOperationCompleted
            End If
            Me.InvokeAsync("ScanAdvanced", New Object() {qraNumber, testStageName, testName, overallTestResult, userIdentification, locationIdenitifcation, trackingLocationName, jobName, productGroup}, Me.ScanAdvancedOperationCompleted, userState)
        End Sub
        
        Private Sub OnScanAdvancedOperationCompleted(ByVal arg As Object)
            If (Not (Me.ScanAdvancedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ScanAdvancedCompleted(Me, New ScanAdvancedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetBatchResultsOverview", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBatchResultsOverview(ByVal qraNumber As String) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> TestStageResultOverview()
            Dim results() As Object = Me.Invoke("GetBatchResultsOverview", New Object() {qraNumber})
            Return CType(results(0),TestStageResultOverview())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBatchResultsOverviewAsync(ByVal qraNumber As String)
            Me.GetBatchResultsOverviewAsync(qraNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBatchResultsOverviewAsync(ByVal qraNumber As String, ByVal userState As Object)
            If (Me.GetBatchResultsOverviewOperationCompleted Is Nothing) Then
                Me.GetBatchResultsOverviewOperationCompleted = AddressOf Me.OnGetBatchResultsOverviewOperationCompleted
            End If
            Me.InvokeAsync("GetBatchResultsOverview", New Object() {qraNumber}, Me.GetBatchResultsOverviewOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBatchResultsOverviewOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBatchResultsOverviewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBatchResultsOverviewCompleted(Me, New GetBatchResultsOverviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/IncomingGetAndSaveBatch", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IncomingGetAndSaveBatch(ByVal qraNumber As String, ByVal userIdentification As String) As IncomingAppBatchData
            Dim results() As Object = Me.Invoke("IncomingGetAndSaveBatch", New Object() {qraNumber, userIdentification})
            Return CType(results(0),IncomingAppBatchData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IncomingGetAndSaveBatchAsync(ByVal qraNumber As String, ByVal userIdentification As String)
            Me.IncomingGetAndSaveBatchAsync(qraNumber, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IncomingGetAndSaveBatchAsync(ByVal qraNumber As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.IncomingGetAndSaveBatchOperationCompleted Is Nothing) Then
                Me.IncomingGetAndSaveBatchOperationCompleted = AddressOf Me.OnIncomingGetAndSaveBatchOperationCompleted
            End If
            Me.InvokeAsync("IncomingGetAndSaveBatch", New Object() {qraNumber, userIdentification}, Me.IncomingGetAndSaveBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnIncomingGetAndSaveBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.IncomingGetAndSaveBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IncomingGetAndSaveBatchCompleted(Me, New IncomingGetAndSaveBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/SendMail", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendMail(ByVal destinations As String, ByVal sender As String, ByVal subject As String, ByVal messageBody As String)
            Me.Invoke("SendMail", New Object() {destinations, sender, subject, messageBody})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMailAsync(ByVal destinations As String, ByVal sender As String, ByVal subject As String, ByVal messageBody As String)
            Me.SendMailAsync(destinations, sender, subject, messageBody, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMailAsync(ByVal destinations As String, ByVal sender As String, ByVal subject As String, ByVal messageBody As String, ByVal userState As Object)
            If (Me.SendMailOperationCompleted Is Nothing) Then
                Me.SendMailOperationCompleted = AddressOf Me.OnSendMailOperationCompleted
            End If
            Me.InvokeAsync("SendMail", New Object() {destinations, sender, subject, messageBody}, Me.SendMailOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMailOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/SendMailAdvanced", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendMailAdvanced(ByVal destinations As String, ByVal sender As String, ByVal subject As String, ByVal messageBody As String, ByVal isHTML As Boolean)
            Me.Invoke("SendMailAdvanced", New Object() {destinations, sender, subject, messageBody, isHTML})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMailAdvancedAsync(ByVal destinations As String, ByVal sender As String, ByVal subject As String, ByVal messageBody As String, ByVal isHTML As Boolean)
            Me.SendMailAdvancedAsync(destinations, sender, subject, messageBody, isHTML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMailAdvancedAsync(ByVal destinations As String, ByVal sender As String, ByVal subject As String, ByVal messageBody As String, ByVal isHTML As Boolean, ByVal userState As Object)
            If (Me.SendMailAdvancedOperationCompleted Is Nothing) Then
                Me.SendMailAdvancedOperationCompleted = AddressOf Me.OnSendMailAdvancedOperationCompleted
            End If
            Me.InvokeAsync("SendMailAdvanced", New Object() {destinations, sender, subject, messageBody, isHTML}, Me.SendMailAdvancedOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMailAdvancedOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMailAdvancedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMailAdvancedCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetAllAccessByWorkstation", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllAccessByWorkstation(ByVal workstationName As String, ByVal getGlobalAccess As Boolean) As String()
            Dim results() As Object = Me.Invoke("GetAllAccessByWorkstation", New Object() {workstationName, getGlobalAccess})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllAccessByWorkstationAsync(ByVal workstationName As String, ByVal getGlobalAccess As Boolean)
            Me.GetAllAccessByWorkstationAsync(workstationName, getGlobalAccess, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllAccessByWorkstationAsync(ByVal workstationName As String, ByVal getGlobalAccess As Boolean, ByVal userState As Object)
            If (Me.GetAllAccessByWorkstationOperationCompleted Is Nothing) Then
                Me.GetAllAccessByWorkstationOperationCompleted = AddressOf Me.OnGetAllAccessByWorkstationOperationCompleted
            End If
            Me.InvokeAsync("GetAllAccessByWorkstation", New Object() {workstationName, getGlobalAccess}, Me.GetAllAccessByWorkstationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllAccessByWorkstationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllAccessByWorkstationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllAccessByWorkstationCompleted(Me, New GetAllAccessByWorkstationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/HasAccess", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HasAccess(ByVal targetAccess As String) As Boolean
            Dim results() As Object = Me.Invoke("HasAccess", New Object() {targetAccess})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HasAccessAsync(ByVal targetAccess As String)
            Me.HasAccessAsync(targetAccess, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HasAccessAsync(ByVal targetAccess As String, ByVal userState As Object)
            If (Me.HasAccessOperationCompleted Is Nothing) Then
                Me.HasAccessOperationCompleted = AddressOf Me.OnHasAccessOperationCompleted
            End If
            Me.InvokeAsync("HasAccess", New Object() {targetAccess}, Me.HasAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnHasAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.HasAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HasAccessCompleted(Me, New HasAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/HasAccessByWorkstation", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HasAccessByWorkstation(ByVal targetAccess As String, ByVal workstationName As String) As Boolean
            Dim results() As Object = Me.Invoke("HasAccessByWorkstation", New Object() {targetAccess, workstationName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HasAccessByWorkstationAsync(ByVal targetAccess As String, ByVal workstationName As String)
            Me.HasAccessByWorkstationAsync(targetAccess, workstationName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HasAccessByWorkstationAsync(ByVal targetAccess As String, ByVal workstationName As String, ByVal userState As Object)
            If (Me.HasAccessByWorkstationOperationCompleted Is Nothing) Then
                Me.HasAccessByWorkstationOperationCompleted = AddressOf Me.OnHasAccessByWorkstationOperationCompleted
            End If
            Me.InvokeAsync("HasAccessByWorkstation", New Object() {targetAccess, workstationName}, Me.HasAccessByWorkstationOperationCompleted, userState)
        End Sub
        
        Private Sub OnHasAccessByWorkstationOperationCompleted(ByVal arg As Object)
            If (Not (Me.HasAccessByWorkstationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HasAccessByWorkstationCompleted(Me, New HasAccessByWorkstationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetTestRecords", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTestRecords(ByVal QRANumber As String, ByVal userIdentification As String) As TestRecord()
            Dim results() As Object = Me.Invoke("GetTestRecords", New Object() {QRANumber, userIdentification})
            Return CType(results(0),TestRecord())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTestRecordsAsync(ByVal QRANumber As String, ByVal userIdentification As String)
            Me.GetTestRecordsAsync(QRANumber, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTestRecordsAsync(ByVal QRANumber As String, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.GetTestRecordsOperationCompleted Is Nothing) Then
                Me.GetTestRecordsOperationCompleted = AddressOf Me.OnGetTestRecordsOperationCompleted
            End If
            Me.InvokeAsync("GetTestRecords", New Object() {QRANumber, userIdentification}, Me.GetTestRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTestRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTestRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTestRecordsCompleted(Me, New GetTestRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/TestRecordAdd", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TestRecordAdd(ByVal qranumber As String, ByVal unitNumber As Integer, ByVal userIdentification As String, ByVal testRecordStatus As TestRecordStatus, ByVal jobName As String, ByVal testStageName As String, ByVal testName As String) As Boolean
            Dim results() As Object = Me.Invoke("TestRecordAdd", New Object() {qranumber, unitNumber, userIdentification, testRecordStatus, jobName, testStageName, testName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TestRecordAddAsync(ByVal qranumber As String, ByVal unitNumber As Integer, ByVal userIdentification As String, ByVal testRecordStatus As TestRecordStatus, ByVal jobName As String, ByVal testStageName As String, ByVal testName As String)
            Me.TestRecordAddAsync(qranumber, unitNumber, userIdentification, testRecordStatus, jobName, testStageName, testName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestRecordAddAsync(ByVal qranumber As String, ByVal unitNumber As Integer, ByVal userIdentification As String, ByVal testRecordStatus As TestRecordStatus, ByVal jobName As String, ByVal testStageName As String, ByVal testName As String, ByVal userState As Object)
            If (Me.TestRecordAddOperationCompleted Is Nothing) Then
                Me.TestRecordAddOperationCompleted = AddressOf Me.OnTestRecordAddOperationCompleted
            End If
            Me.InvokeAsync("TestRecordAdd", New Object() {qranumber, unitNumber, userIdentification, testRecordStatus, jobName, testStageName, testName}, Me.TestRecordAddOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestRecordAddOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestRecordAddCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestRecordAddCompleted(Me, New TestRecordAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/BuildConfigurationObject", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuildConfigurationObject(ByVal srd As ScanReturnData, ByVal machineName As String) As ConfigurationReturnData
            Dim results() As Object = Me.Invoke("BuildConfigurationObject", New Object() {srd, machineName})
            Return CType(results(0),ConfigurationReturnData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuildConfigurationObjectAsync(ByVal srd As ScanReturnData, ByVal machineName As String)
            Me.BuildConfigurationObjectAsync(srd, machineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuildConfigurationObjectAsync(ByVal srd As ScanReturnData, ByVal machineName As String, ByVal userState As Object)
            If (Me.BuildConfigurationObjectOperationCompleted Is Nothing) Then
                Me.BuildConfigurationObjectOperationCompleted = AddressOf Me.OnBuildConfigurationObjectOperationCompleted
            End If
            Me.InvokeAsync("BuildConfigurationObject", New Object() {srd, machineName}, Me.BuildConfigurationObjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuildConfigurationObjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuildConfigurationObjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuildConfigurationObjectCompleted(Me, New BuildConfigurationObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/DeleteException", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteException(ByVal qraNumber As String, ByVal testName As String, ByVal testStageName As String, ByVal testUnitID As Integer, ByVal userIdentification As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteException", New Object() {qraNumber, testName, testStageName, testUnitID, userIdentification})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteExceptionAsync(ByVal qraNumber As String, ByVal testName As String, ByVal testStageName As String, ByVal testUnitID As Integer, ByVal userIdentification As String)
            Me.DeleteExceptionAsync(qraNumber, testName, testStageName, testUnitID, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteExceptionAsync(ByVal qraNumber As String, ByVal testName As String, ByVal testStageName As String, ByVal testUnitID As Integer, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.DeleteExceptionOperationCompleted Is Nothing) Then
                Me.DeleteExceptionOperationCompleted = AddressOf Me.OnDeleteExceptionOperationCompleted
            End If
            Me.InvokeAsync("DeleteException", New Object() {qraNumber, testName, testStageName, testUnitID, userIdentification}, Me.DeleteExceptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteExceptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteExceptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteExceptionCompleted(Me, New DeleteExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/AddException", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddException(ByVal qraNumber As String, ByVal testName As String, ByVal testStageName As String, ByVal testUnitID As Integer, ByVal userIdentification As String) As Boolean
            Dim results() As Object = Me.Invoke("AddException", New Object() {qraNumber, testName, testStageName, testUnitID, userIdentification})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddExceptionAsync(ByVal qraNumber As String, ByVal testName As String, ByVal testStageName As String, ByVal testUnitID As Integer, ByVal userIdentification As String)
            Me.AddExceptionAsync(qraNumber, testName, testStageName, testUnitID, userIdentification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddExceptionAsync(ByVal qraNumber As String, ByVal testName As String, ByVal testStageName As String, ByVal testUnitID As Integer, ByVal userIdentification As String, ByVal userState As Object)
            If (Me.AddExceptionOperationCompleted Is Nothing) Then
                Me.AddExceptionOperationCompleted = AddressOf Me.OnAddExceptionOperationCompleted
            End If
            Me.InvokeAsync("AddException", New Object() {qraNumber, testName, testStageName, testUnitID, userIdentification}, Me.AddExceptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddExceptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddExceptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddExceptionCompleted(Me, New AddExceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetRequest", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRequest(ByVal requestNumber As String) As RequestFields()
            Dim results() As Object = Me.Invoke("GetRequest", New Object() {requestNumber})
            Return CType(results(0),RequestFields())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRequestAsync(ByVal requestNumber As String)
            Me.GetRequestAsync(requestNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRequestAsync(ByVal requestNumber As String, ByVal userState As Object)
            If (Me.GetRequestOperationCompleted Is Nothing) Then
                Me.GetRequestOperationCompleted = AddressOf Me.OnGetRequestOperationCompleted
            End If
            Me.InvokeAsync("GetRequest", New Object() {requestNumber}, Me.GetRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRequestCompleted(Me, New GetRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://go/remi/GetServicesAccess", RequestNamespace:="http://go/remi/", ResponseNamespace:="http://go/remi/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServicesAccess(ByVal departmentID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetServicesAccess", New Object() {departmentID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServicesAccessAsync(ByVal departmentID As Integer)
            Me.GetServicesAccessAsync(departmentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServicesAccessAsync(ByVal departmentID As Integer, ByVal userState As Object)
            If (Me.GetServicesAccessOperationCompleted Is Nothing) Then
                Me.GetServicesAccessOperationCompleted = AddressOf Me.OnGetServicesAccessOperationCompleted
            End If
            Me.InvokeAsync("GetServicesAccess", New Object() {departmentID}, Me.GetServicesAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServicesAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServicesAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServicesAccessCompleted(Me, New GetServicesAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum TrackingLocationFunction
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        NonTesting
        
        '''<remarks/>
        Testing
        
        '''<remarks/>
        ExternalLocation
        
        '''<remarks/>
        EnvironmentalStressing
        
        '''<remarks/>
        IncomingLabeling
        
        '''<remarks/>
        REMSTAR
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum BatchStatus
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        Held
        
        '''<remarks/>
        InProgress
        
        '''<remarks/>
        Quarantined
        
        '''<remarks/>
        Received
        
        '''<remarks/>
        Complete
        
        '''<remarks/>
        NotSavedToREMI
        
        '''<remarks/>
        Rejected
        
        '''<remarks/>
        TestingComplete
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum BatchSearchTestStageType
        
        '''<remarks/>
        Parametric
        
        '''<remarks/>
        EnvironmentalStress
        
        '''<remarks/>
        IncomingEvaluation
        
        '''<remarks/>
        NonTestingTask
        
        '''<remarks/>
        FailureAnalysis
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum BatchSearchBatchStatus
        
        '''<remarks/>
        Held
        
        '''<remarks/>
        InProgress
        
        '''<remarks/>
        Quarantined
        
        '''<remarks/>
        Received
        
        '''<remarks/>
        Complete
        
        '''<remarks/>
        NotSavedToREMI
        
        '''<remarks/>
        Rejected
        
        '''<remarks/>
        TestingComplete
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum TestStageType
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        Parametric
        
        '''<remarks/>
        EnvironmentalStress
        
        '''<remarks/>
        IncomingEvaluation
        
        '''<remarks/>
        NonTestingTask
        
        '''<remarks/>
        FailureAnalysis
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class BatchView
        Inherits BatchBase
        
        Private testUnitsField() As TestUnit
        
        '''<remarks/>
        Public Property TestUnits() As TestUnit()
            Get
                Return Me.testUnitsField
            End Get
            Set
                Me.testUnitsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TestUnit
        Inherits LoggedItemBase
        
        Private qRANumberField As String
        
        Private assignedToField As String
        
        Private noBSNField As Boolean
        
        Private currentLogField As DeviceTrackingLog
        
        Private commentsField As String
        
        Private bSNField As Long
        
        Private iMEIField As String
        
        Private batchUnitNumberField As Integer
        
        Private testCenterIDField As Integer
        
        Private currentTestNameField As String
        
        Private currentTestStageField As TestStage
        
        '''<remarks/>
        Public Property QRANumber() As String
            Get
                Return Me.qRANumberField
            End Get
            Set
                Me.qRANumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssignedTo() As String
            Get
                Return Me.assignedToField
            End Get
            Set
                Me.assignedToField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NoBSN() As Boolean
            Get
                Return Me.noBSNField
            End Get
            Set
                Me.noBSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentLog() As DeviceTrackingLog
            Get
                Return Me.currentLogField
            End Get
            Set
                Me.currentLogField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BSN() As Long
            Get
                Return Me.bSNField
            End Get
            Set
                Me.bSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IMEI() As String
            Get
                Return Me.iMEIField
            End Get
            Set
                Me.iMEIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BatchUnitNumber() As Integer
            Get
                Return Me.batchUnitNumberField
            End Get
            Set
                Me.batchUnitNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestCenterID() As Integer
            Get
                Return Me.testCenterIDField
            End Get
            Set
                Me.testCenterIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentTestName() As String
            Get
                Return Me.currentTestNameField
            End Get
            Set
                Me.currentTestNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentTestStage() As TestStage
            Get
                Return Me.currentTestStageField
            End Get
            Set
                Me.currentTestStageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class DeviceTrackingLog
        Inherits BusinessBase
        
        Private testUnitIDField As Integer
        
        Private trackingLocationIDField As Integer
        
        Private trackingLocationNameField As String
        
        Private inTimeField As Date
        
        Private outTimeField As Date
        
        Private inUserField As String
        
        Private outUserField As String
        
        Private testUnitBatchUnitNumberField As Integer
        
        Private testUnitQRANumberField As String
        
        '''<remarks/>
        Public Property TestUnitID() As Integer
            Get
                Return Me.testUnitIDField
            End Get
            Set
                Me.testUnitIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrackingLocationID() As Integer
            Get
                Return Me.trackingLocationIDField
            End Get
            Set
                Me.trackingLocationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrackingLocationName() As String
            Get
                Return Me.trackingLocationNameField
            End Get
            Set
                Me.trackingLocationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InTime() As Date
            Get
                Return Me.inTimeField
            End Get
            Set
                Me.inTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OutTime() As Date
            Get
                Return Me.outTimeField
            End Get
            Set
                Me.outTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InUser() As String
            Get
                Return Me.inUserField
            End Get
            Set
                Me.inUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OutUser() As String
            Get
                Return Me.outUserField
            End Get
            Set
                Me.outUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestUnitBatchUnitNumber() As Integer
            Get
                Return Me.testUnitBatchUnitNumberField
            End Get
            Set
                Me.testUnitBatchUnitNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestUnitQRANumber() As String
            Get
                Return Me.testUnitQRANumberField
            End Get
            Set
                Me.testUnitQRANumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(DeviceTrackingLog)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(LoggedItemBase)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ProductConfiguration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Calibration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestRecord)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(User)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Job)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TrackingLocation)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TrackingLocationType)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Test)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestStage)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestUnit)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RequestFields)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BatchBase)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BatchView)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public MustInherit Class BusinessBase
        Inherits ValidationBase
        
        Private idField As Integer
        
        Private concurrencyIDField() As Byte
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ConcurrencyID() As Byte()
            Get
                Return Me.concurrencyIDField
            End Get
            Set
                Me.concurrencyIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ConfigurationReturnData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ScanReturnData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BusinessBase)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DeviceTrackingLog)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(LoggedItemBase)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ProductConfiguration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Calibration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestRecord)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(User)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Job)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TrackingLocation)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TrackingLocationType)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Test)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestStage)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestUnit)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RequestFields)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BatchBase)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BatchView)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class ValidationBase
        
        Private resourceManagerField As ResourceManager
        
        Private notificationsField() As Notification
        
        '''<remarks/>
        Public Property ResourceManager() As ResourceManager
            Get
                Return Me.resourceManagerField
            End Get
            Set
                Me.resourceManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notifications() As Notification()
            Get
                Return Me.notificationsField
            End Get
            Set
                Me.notificationsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class ResourceManager
        
        Private ignoreCaseField As Boolean
        
        '''<remarks/>
        Public Property IgnoreCase() As Boolean
            Get
                Return Me.ignoreCaseField
            End Get
            Set
                Me.ignoreCaseField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class IncomingAppBatchData
        
        Private qRANumberField As String
        
        Private jobIDField As Integer
        
        Private jobNameField As String
        
        Private productGroupField As String
        
        Private partNameField As String
        
        Private assemblyRevisionField As String
        
        Private assemblyNumberField As String
        
        Private isInREMIField As Boolean
        
        Private notificationsField() As Notification
        
        '''<remarks/>
        Public Property QRANumber() As String
            Get
                Return Me.qRANumberField
            End Get
            Set
                Me.qRANumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobID() As Integer
            Get
                Return Me.jobIDField
            End Get
            Set
                Me.jobIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductGroup() As String
            Get
                Return Me.productGroupField
            End Get
            Set
                Me.productGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PartName() As String
            Get
                Return Me.partNameField
            End Get
            Set
                Me.partNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssemblyRevision() As String
            Get
                Return Me.assemblyRevisionField
            End Get
            Set
                Me.assemblyRevisionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssemblyNumber() As String
            Get
                Return Me.assemblyNumberField
            End Get
            Set
                Me.assemblyNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsInREMI() As Boolean
            Get
                Return Me.isInREMIField
            End Get
            Set
                Me.isInREMIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notifications() As Notification()
            Get
                Return Me.notificationsField
            End Get
            Set
                Me.notificationsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class Notification
        
        Private messageField As String
        
        Private errorCodeField As String
        
        Private additionalInformationField As String
        
        Private propertyNameField As String
        
        Private typeField As NotificationType
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCode() As String
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdditionalInformation() As String
            Get
                Return Me.additionalInformationField
            End Get
            Set
                Me.additionalInformationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PropertyName() As String
            Get
                Return Me.propertyNameField
            End Get
            Set
                Me.propertyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As NotificationType
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum NotificationType
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        Errors
        
        '''<remarks/>
        Information
        
        '''<remarks/>
        Warning
        
        '''<remarks/>
        Fatal
        
        '''<remarks/>
        Debug
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TaskResultOverview
        
        Private taskNameField As String
        
        Private overallResultField As String
        
        Private failDocsField() As Integer
        
        '''<remarks/>
        Public Property TaskName() As String
            Get
                Return Me.taskNameField
            End Get
            Set
                Me.taskNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OverallResult() As String
            Get
                Return Me.overallResultField
            End Get
            Set
                Me.overallResultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FailDocs() As Integer()
            Get
                Return Me.failDocsField
            End Get
            Set
                Me.failDocsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TestStageResultOverview
        
        Private testStageNameField As String
        
        Private orderField As Integer
        
        Private tasksField() As TaskResultOverview
        
        '''<remarks/>
        Public Property TestStageName() As String
            Get
                Return Me.testStageNameField
            End Get
            Set
                Me.testStageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Order() As Integer
            Get
                Return Me.orderField
            End Get
            Set
                Me.orderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Tasks() As TaskResultOverview()
            Get
                Return Me.tasksField
            End Get
            Set
                Me.tasksField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class UserDetails
        
        Private userNameField As String
        
        Private hasBasicAccessField As Boolean
        
        Private hasModifiedAccessField As Boolean
        
        Private hasCalibrationAccessField As Boolean
        
        Private userField As User
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasBasicAccess() As Boolean
            Get
                Return Me.hasBasicAccessField
            End Get
            Set
                Me.hasBasicAccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasModifiedAccess() As Boolean
            Get
                Return Me.hasModifiedAccessField
            End Get
            Set
                Me.hasModifiedAccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasCalibrationAccess() As Boolean
            Get
                Return Me.hasCalibrationAccessField
            End Get
            Set
                Me.hasCalibrationAccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property user() As User
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class User
        Inherits LoggedItemBase
        
        Private badgeNumberField As Integer
        
        Private byPassProductField As Integer
        
        Private isActiveField As Integer
        
        Private defaultPageField As String
        
        Private lDAPNameField As String
        
        Private productGroupsField As System.Data.DataTable
        
        Private requestTypesField As System.Data.DataTable
        
        Private servicesField As System.Data.DataTable
        
        Private userDetailsField As System.Data.DataTable
        
        Private trainingField As System.Data.DataTable
        
        Private emailAddressField As String
        
        Private fullNameField As String
        
        Private extensionField As String
        
        Private jobTitleField As String
        
        '''<remarks/>
        Public Property BadgeNumber() As Integer
            Get
                Return Me.badgeNumberField
            End Get
            Set
                Me.badgeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ByPassProduct() As Integer
            Get
                Return Me.byPassProductField
            End Get
            Set
                Me.byPassProductField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsActive() As Integer
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultPage() As String
            Get
                Return Me.defaultPageField
            End Get
            Set
                Me.defaultPageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LDAPName() As String
            Get
                Return Me.lDAPNameField
            End Get
            Set
                Me.lDAPNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductGroups() As System.Data.DataTable
            Get
                Return Me.productGroupsField
            End Get
            Set
                Me.productGroupsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestTypes() As System.Data.DataTable
            Get
                Return Me.requestTypesField
            End Get
            Set
                Me.requestTypesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Services() As System.Data.DataTable
            Get
                Return Me.servicesField
            End Get
            Set
                Me.servicesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserDetails() As System.Data.DataTable
            Get
                Return Me.userDetailsField
            End Get
            Set
                Me.userDetailsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Training() As System.Data.DataTable
            Get
                Return Me.trainingField
            End Get
            Set
                Me.trainingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FullName() As String
            Get
                Return Me.fullNameField
            End Get
            Set
                Me.fullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Extension() As String
            Get
                Return Me.extensionField
            End Get
            Set
                Me.extensionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ProductConfiguration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Calibration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestRecord)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(User)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Job)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TrackingLocation)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TrackingLocationType)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Test)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestStage)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TestUnit)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RequestFields)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BatchBase)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BatchView)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public MustInherit Class LoggedItemBase
        Inherits BusinessBase
        
        Private lastUserField As String
        
        '''<remarks/>
        Public Property LastUser() As String
            Get
                Return Me.lastUserField
            End Get
            Set
                Me.lastUserField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class ProductConfiguration
        Inherits LoggedItemBase
        
        Private prevVersionsField() As ProductConfiguration
        
        Private codeVersionsField() As String
        
        Private hasConfigField As Boolean
        
        Private nameField As String
        
        Private xMLField As String
        
        Private testNameField As String
        
        Private productNameField As String
        
        Private testIDField As Integer
        
        Private productIDField As Integer
        
        Private versionNumField As Integer
        
        '''<remarks/>
        Public Property PrevVersions() As ProductConfiguration()
            Get
                Return Me.prevVersionsField
            End Get
            Set
                Me.prevVersionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodeVersions() As String()
            Get
                Return Me.codeVersionsField
            End Get
            Set
                Me.codeVersionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasConfig() As Boolean
            Get
                Return Me.hasConfigField
            End Get
            Set
                Me.hasConfigField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property XML() As String
            Get
                Return Me.xMLField
            End Get
            Set
                Me.xMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestName() As String
            Get
                Return Me.testNameField
            End Get
            Set
                Me.testNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductName() As String
            Get
                Return Me.productNameField
            End Get
            Set
                Me.productNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestID() As Integer
            Get
                Return Me.testIDField
            End Get
            Set
                Me.testIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As Integer
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VersionNum() As Integer
            Get
                Return Me.versionNumField
            End Get
            Set
                Me.versionNumField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class Calibration
        Inherits LoggedItemBase
        
        Private nameField As String
        
        Private testNameField As String
        
        Private productGroupNameField As String
        
        Private hostNameField As String
        
        Private testIDField As Integer
        
        Private hostIDField As Integer
        
        Private productIDField As Integer
        
        Private dateCreatedField As Date
        
        Private fileField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestName() As String
            Get
                Return Me.testNameField
            End Get
            Set
                Me.testNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductGroupName() As String
            Get
                Return Me.productGroupNameField
            End Get
            Set
                Me.productGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HostName() As String
            Get
                Return Me.hostNameField
            End Get
            Set
                Me.hostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestID() As Integer
            Get
                Return Me.testIDField
            End Get
            Set
                Me.testIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HostID() As Integer
            Get
                Return Me.hostIDField
            End Get
            Set
                Me.hostIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As Integer
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property File() As String
            Get
                Return Me.fileField
            End Get
            Set
                Me.fileField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TestRecord
        Inherits LoggedItemBase
        
        Private testUnitIDField As Integer
        
        Private testIDField As Integer
        
        Private functionalTypeField As Integer
        
        Private testStageIDField As Integer
        
        Private resultSourceField As TestResultSource
        
        Private jobNameField As String
        
        Private testStageNameField As String
        
        Private testNameField As String
        
        Private statusField As TestRecordStatus
        
        Private currentRelabResultVersionField As Integer
        
        Private commentsField As String
        
        Private numberOfTestsField As Integer
        
        Private batchUnitNumberField As Integer
        
        Private qRANumberField As String
        
        Private totalTestTimeInMinutesField As Double
        
        '''<remarks/>
        Public Property TestUnitID() As Integer
            Get
                Return Me.testUnitIDField
            End Get
            Set
                Me.testUnitIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestID() As Integer
            Get
                Return Me.testIDField
            End Get
            Set
                Me.testIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FunctionalType() As Integer
            Get
                Return Me.functionalTypeField
            End Get
            Set
                Me.functionalTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStageID() As Integer
            Get
                Return Me.testStageIDField
            End Get
            Set
                Me.testStageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResultSource() As TestResultSource
            Get
                Return Me.resultSourceField
            End Get
            Set
                Me.resultSourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStageName() As String
            Get
                Return Me.testStageNameField
            End Get
            Set
                Me.testStageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestName() As String
            Get
                Return Me.testNameField
            End Get
            Set
                Me.testNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As TestRecordStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentRelabResultVersion() As Integer
            Get
                Return Me.currentRelabResultVersionField
            End Get
            Set
                Me.currentRelabResultVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumberOfTests() As Integer
            Get
                Return Me.numberOfTestsField
            End Get
            Set
                Me.numberOfTestsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BatchUnitNumber() As Integer
            Get
                Return Me.batchUnitNumberField
            End Get
            Set
                Me.batchUnitNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QRANumber() As String
            Get
                Return Me.qRANumberField
            End Get
            Set
                Me.qRANumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalTestTimeInMinutes() As Double
            Get
                Return Me.totalTestTimeInMinutesField
            End Get
            Set
                Me.totalTestTimeInMinutesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum TestResultSource
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        Relab
        
        '''<remarks/>
        WebService
        
        '''<remarks/>
        Manual
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum TestRecordStatus
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        CompleteFail
        
        '''<remarks/>
        Complete
        
        '''<remarks/>
        FARaised
        
        '''<remarks/>
        FARequired
        
        '''<remarks/>
        NeedsRetest
        
        '''<remarks/>
        CompleteKnownFailure
        
        '''<remarks/>
        WaitingForResult
        
        '''<remarks/>
        InProgress
        
        '''<remarks/>
        Quarantined
        
        '''<remarks/>
        FAComplete_InTest
        
        '''<remarks/>
        FAComplete_OutOfTest
        
        '''<remarks/>
        TestingSuspended
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class Job
        Inherits LoggedItemBase
        
        Private nameField As String
        
        Private wILocationField As String
        
        Private procedureLocationField As String
        
        Private isTechOperationsTestField As Boolean
        
        Private isMechanicalTestField As Boolean
        
        Private isActiveField As Boolean
        
        Private continueOnFailuresField As Boolean
        
        Private noBSNField As Boolean
        
        Private isOperationsTestField As Boolean
        
        Private testStagesField() As TestStage
        
        Private commentField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WILocation() As String
            Get
                Return Me.wILocationField
            End Get
            Set
                Me.wILocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProcedureLocation() As String
            Get
                Return Me.procedureLocationField
            End Get
            Set
                Me.procedureLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsTechOperationsTest() As Boolean
            Get
                Return Me.isTechOperationsTestField
            End Get
            Set
                Me.isTechOperationsTestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsMechanicalTest() As Boolean
            Get
                Return Me.isMechanicalTestField
            End Get
            Set
                Me.isMechanicalTestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContinueOnFailures() As Boolean
            Get
                Return Me.continueOnFailuresField
            End Get
            Set
                Me.continueOnFailuresField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NoBSN() As Boolean
            Get
                Return Me.noBSNField
            End Get
            Set
                Me.noBSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsOperationsTest() As Boolean
            Get
                Return Me.isOperationsTestField
            End Get
            Set
                Me.isOperationsTestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStages() As TestStage()
            Get
                Return Me.testStagesField
            End Get
            Set
                Me.testStagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TestStage
        Inherits LoggedItemBase
        
        Private nameField As String
        
        Private processOrderField As Integer
        
        Private canDeleteField As Boolean
        
        Private isArchivedField As Boolean
        
        Private testStageTypeField As TestStageType
        
        Private testIDField As Integer
        
        Private testsField() As Test
        
        Private commentsField As String
        
        Private jobNameField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProcessOrder() As Integer
            Get
                Return Me.processOrderField
            End Get
            Set
                Me.processOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDelete() As Boolean
            Get
                Return Me.canDeleteField
            End Get
            Set
                Me.canDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsArchived() As Boolean
            Get
                Return Me.isArchivedField
            End Get
            Set
                Me.isArchivedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStageType() As TestStageType
            Get
                Return Me.testStageTypeField
            End Get
            Set
                Me.testStageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestID() As Integer
            Get
                Return Me.testIDField
            End Get
            Set
                Me.testIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tests() As Test()
            Get
                Return Me.testsField
            End Get
            Set
                Me.testsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class Test
        Inherits LoggedItemBase
        
        Private trackingLocationTypesField() As TrackingLocationType
        
        Private nameField As String
        
        Private durationField As TimeSpan
        
        Private canDeleteField As Boolean
        
        Private workInstructionLocationField As String
        
        Private commentsField As String
        
        Private testStageField As String
        
        Private jobNameField As String
        
        Private ownerField As String
        
        Private degradationField As Decimal
        
        Private traineeField As String
        
        Private isArchivedField As Boolean
        
        Private testTypeField As TestType
        
        Private totalHoursField As String
        
        Private resultIsTimeBasedField As Boolean
        
        '''<remarks/>
        Public Property TrackingLocationTypes() As TrackingLocationType()
            Get
                Return Me.trackingLocationTypesField
            End Get
            Set
                Me.trackingLocationTypesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duration() As TimeSpan
            Get
                Return Me.durationField
            End Get
            Set
                Me.durationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDelete() As Boolean
            Get
                Return Me.canDeleteField
            End Get
            Set
                Me.canDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkInstructionLocation() As String
            Get
                Return Me.workInstructionLocationField
            End Get
            Set
                Me.workInstructionLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStage() As String
            Get
                Return Me.testStageField
            End Get
            Set
                Me.testStageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Owner() As String
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Degradation() As Decimal
            Get
                Return Me.degradationField
            End Get
            Set
                Me.degradationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Trainee() As String
            Get
                Return Me.traineeField
            End Get
            Set
                Me.traineeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsArchived() As Boolean
            Get
                Return Me.isArchivedField
            End Get
            Set
                Me.isArchivedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestType() As TestType
            Get
                Return Me.testTypeField
            End Get
            Set
                Me.testTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalHours() As String
            Get
                Return Me.totalHoursField
            End Get
            Set
                Me.totalHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResultIsTimeBased() As Boolean
            Get
                Return Me.resultIsTimeBasedField
            End Get
            Set
                Me.resultIsTimeBasedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TrackingLocationType
        Inherits LoggedItemBase
        
        Private nameField As String
        
        Private commentField As String
        
        Private wILocationField As String
        
        Private unitCapacityField As Integer
        
        Private canDeleteField As Integer
        
        Private trackingLocationFunctionField As TrackingLocationFunction
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WILocation() As String
            Get
                Return Me.wILocationField
            End Get
            Set
                Me.wILocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitCapacity() As Integer
            Get
                Return Me.unitCapacityField
            End Get
            Set
                Me.unitCapacityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanDelete() As Integer
            Get
                Return Me.canDeleteField
            End Get
            Set
                Me.canDeleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrackingLocationFunction() As TrackingLocationFunction
            Get
                Return Me.trackingLocationFunctionField
            End Get
            Set
                Me.trackingLocationFunctionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TimeSpan
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum TestType
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        Parametric
        
        '''<remarks/>
        EnvironmentalStress
        
        '''<remarks/>
        IncomingEvaluation
        
        '''<remarks/>
        NonTestingTask
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class TrackingLocation
        Inherits LoggedItemBase
        
        Private trackingLocationTypeField As TrackingLocationType
        
        Private isMultiDeviceZoneField As Boolean
        
        Private hostIDField As Integer
        
        Private hostNameField As String
        
        Private nameField As String
        
        Private geoLocationNameField As String
        
        Private geoLocationIDField As Integer
        
        Private trackingLocationTypeIDField As Integer
        
        '''<remarks/>
        Public Property TrackingLocationType() As TrackingLocationType
            Get
                Return Me.trackingLocationTypeField
            End Get
            Set
                Me.trackingLocationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsMultiDeviceZone() As Boolean
            Get
                Return Me.isMultiDeviceZoneField
            End Get
            Set
                Me.isMultiDeviceZoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HostID() As Integer
            Get
                Return Me.hostIDField
            End Get
            Set
                Me.hostIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HostName() As String
            Get
                Return Me.hostNameField
            End Get
            Set
                Me.hostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoLocationName() As String
            Get
                Return Me.geoLocationNameField
            End Get
            Set
                Me.geoLocationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoLocationID() As Integer
            Get
                Return Me.geoLocationIDField
            End Get
            Set
                Me.geoLocationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrackingLocationTypeID() As Integer
            Get
                Return Me.trackingLocationTypeIDField
            End Get
            Set
                Me.trackingLocationTypeIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class RequestFields
        Inherits LoggedItemBase
        
        Private requestTypeIDField As Integer
        
        Private requestTypeField As String
        
        Private requestIDField As Integer
        
        Private requestNumberField As String
        
        Private internalFieldField As Integer
        
        Private fieldSetupIDField As Integer
        
        Private nameField As String
        
        Private categoryField As String
        
        Private displayOrderField As Integer
        
        Private columnOrderField As Integer
        
        Private isRequiredField As Boolean
        
        Private fieldTypeIDField As Integer
        
        Private fieldTypeField As String
        
        Private fieldValidationIDField As Integer
        
        Private fieldValidationField As String
        
        Private descriptionField As String
        
        Private optionsTypeIDField As Integer
        
        Private optionsTypeField() As String
        
        Private customLookupHierarchyField() As RequestFieldObjectHeirarchy
        
        Private isArchivedField As Boolean
        
        Private intFieldField As String
        
        Private extFieldField As String
        
        Private isFromExternalSystemField As Boolean
        
        Private hasIntegrationField As Boolean
        
        Private valueField As String
        
        Private newRequestField As Boolean
        
        Private parentFieldSetupIDField As Integer
        
        '''<remarks/>
        Public Property RequestTypeID() As Integer
            Get
                Return Me.requestTypeIDField
            End Get
            Set
                Me.requestTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestType() As String
            Get
                Return Me.requestTypeField
            End Get
            Set
                Me.requestTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestID() As Integer
            Get
                Return Me.requestIDField
            End Get
            Set
                Me.requestIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestNumber() As String
            Get
                Return Me.requestNumberField
            End Get
            Set
                Me.requestNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InternalField() As Integer
            Get
                Return Me.internalFieldField
            End Get
            Set
                Me.internalFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldSetupID() As Integer
            Get
                Return Me.fieldSetupIDField
            End Get
            Set
                Me.fieldSetupIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Category() As String
            Get
                Return Me.categoryField
            End Get
            Set
                Me.categoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayOrder() As Integer
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ColumnOrder() As Integer
            Get
                Return Me.columnOrderField
            End Get
            Set
                Me.columnOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsRequired() As Boolean
            Get
                Return Me.isRequiredField
            End Get
            Set
                Me.isRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldTypeID() As Integer
            Get
                Return Me.fieldTypeIDField
            End Get
            Set
                Me.fieldTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldType() As String
            Get
                Return Me.fieldTypeField
            End Get
            Set
                Me.fieldTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldValidationID() As Integer
            Get
                Return Me.fieldValidationIDField
            End Get
            Set
                Me.fieldValidationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldValidation() As String
            Get
                Return Me.fieldValidationField
            End Get
            Set
                Me.fieldValidationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OptionsTypeID() As Integer
            Get
                Return Me.optionsTypeIDField
            End Get
            Set
                Me.optionsTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OptionsType() As String()
            Get
                Return Me.optionsTypeField
            End Get
            Set
                Me.optionsTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomLookupHierarchy() As RequestFieldObjectHeirarchy()
            Get
                Return Me.customLookupHierarchyField
            End Get
            Set
                Me.customLookupHierarchyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsArchived() As Boolean
            Get
                Return Me.isArchivedField
            End Get
            Set
                Me.isArchivedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IntField() As String
            Get
                Return Me.intFieldField
            End Get
            Set
                Me.intFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExtField() As String
            Get
                Return Me.extFieldField
            End Get
            Set
                Me.extFieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsFromExternalSystem() As Boolean
            Get
                Return Me.isFromExternalSystemField
            End Get
            Set
                Me.isFromExternalSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasIntegration() As Boolean
            Get
                Return Me.hasIntegrationField
            End Get
            Set
                Me.hasIntegrationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NewRequest() As Boolean
            Get
                Return Me.newRequestField
            End Get
            Set
                Me.newRequestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentFieldSetupID() As Integer
            Get
                Return Me.parentFieldSetupIDField
            End Get
            Set
                Me.parentFieldSetupIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class RequestFieldObjectHeirarchy
        
        Private requestTypeIDField As Integer
        
        Private parentLookupIDField As Integer
        
        Private childLookupIDField As Integer
        
        Private childLookupTypeIDField As Integer
        
        Private parentLookupTypeIDField As Integer
        
        Private parentLookupField As String
        
        Private childLookupField As String
        
        Private parentLookupTypeField As String
        
        Private childLookupTypeField As String
        
        '''<remarks/>
        Public Property RequestTypeID() As Integer
            Get
                Return Me.requestTypeIDField
            End Get
            Set
                Me.requestTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentLookupID() As Integer
            Get
                Return Me.parentLookupIDField
            End Get
            Set
                Me.parentLookupIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChildLookupID() As Integer
            Get
                Return Me.childLookupIDField
            End Get
            Set
                Me.childLookupIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChildLookupTypeID() As Integer
            Get
                Return Me.childLookupTypeIDField
            End Get
            Set
                Me.childLookupTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentLookupTypeID() As Integer
            Get
                Return Me.parentLookupTypeIDField
            End Get
            Set
                Me.parentLookupTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentLookup() As String
            Get
                Return Me.parentLookupField
            End Get
            Set
                Me.parentLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChildLookup() As String
            Get
                Return Me.childLookupField
            End Get
            Set
                Me.childLookupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentLookupType() As String
            Get
                Return Me.parentLookupTypeField
            End Get
            Set
                Me.parentLookupTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChildLookupType() As String
            Get
                Return Me.childLookupTypeField
            End Get
            Set
                Me.childLookupTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(BatchView)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class BatchBase
        Inherits LoggedItemBase
        
        Private qRANumberField As String
        
        Private outOfDateField As Boolean
        
        Private orientationIDField As Integer
        
        Private orientationXMLField As String
        
        Private testStageIDField As Integer
        
        Private jobIDField As Integer
        
        Private testStageNameField As String
        
        Private statusField As BatchStatus
        
        Private numberOfUnitsField As Integer
        
        Private productIDField As Integer
        
        Private productTypeIDField As Integer
        
        Private accessoryGroupIDField As Integer
        
        Private requestPurposeIDField As Integer
        
        Private priorityIDField As Integer
        
        Private testCenterLocationIDField As Integer
        
        Private departmentIDField As Integer
        
        Private reqDataField() As RequestFields
        
        Private jobNameField As String
        
        Private productGroupField As String
        
        Private cPRNumberField As String
        
        Private productTypeField As String
        
        Private accessoryGroupField As String
        
        Private requestPurposeField As String
        
        Private testCenterLocationField As String
        
        Private priorityField As String
        
        Private mechanicalToolsField As String
        
        Private departmentField As String
        
        Private requestLinkField As String
        
        Private numberOfUnitsExpectedField As Integer
        
        Private requestorField As String
        
        '''<remarks/>
        Public Property QRANumber() As String
            Get
                Return Me.qRANumberField
            End Get
            Set
                Me.qRANumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OutOfDate() As Boolean
            Get
                Return Me.outOfDateField
            End Get
            Set
                Me.outOfDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrientationID() As Integer
            Get
                Return Me.orientationIDField
            End Get
            Set
                Me.orientationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrientationXML() As String
            Get
                Return Me.orientationXMLField
            End Get
            Set
                Me.orientationXMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStageID() As Integer
            Get
                Return Me.testStageIDField
            End Get
            Set
                Me.testStageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobID() As Integer
            Get
                Return Me.jobIDField
            End Get
            Set
                Me.jobIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStageName() As String
            Get
                Return Me.testStageNameField
            End Get
            Set
                Me.testStageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As BatchStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumberOfUnits() As Integer
            Get
                Return Me.numberOfUnitsField
            End Get
            Set
                Me.numberOfUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As Integer
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductTypeID() As Integer
            Get
                Return Me.productTypeIDField
            End Get
            Set
                Me.productTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccessoryGroupID() As Integer
            Get
                Return Me.accessoryGroupIDField
            End Get
            Set
                Me.accessoryGroupIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestPurposeID() As Integer
            Get
                Return Me.requestPurposeIDField
            End Get
            Set
                Me.requestPurposeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PriorityID() As Integer
            Get
                Return Me.priorityIDField
            End Get
            Set
                Me.priorityIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestCenterLocationID() As Integer
            Get
                Return Me.testCenterLocationIDField
            End Get
            Set
                Me.testCenterLocationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentID() As Integer
            Get
                Return Me.departmentIDField
            End Get
            Set
                Me.departmentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReqData() As RequestFields()
            Get
                Return Me.reqDataField
            End Get
            Set
                Me.reqDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductGroup() As String
            Get
                Return Me.productGroupField
            End Get
            Set
                Me.productGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CPRNumber() As String
            Get
                Return Me.cPRNumberField
            End Get
            Set
                Me.cPRNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductType() As String
            Get
                Return Me.productTypeField
            End Get
            Set
                Me.productTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccessoryGroup() As String
            Get
                Return Me.accessoryGroupField
            End Get
            Set
                Me.accessoryGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestPurpose() As String
            Get
                Return Me.requestPurposeField
            End Get
            Set
                Me.requestPurposeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestCenterLocation() As String
            Get
                Return Me.testCenterLocationField
            End Get
            Set
                Me.testCenterLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Priority() As String
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MechanicalTools() As String
            Get
                Return Me.mechanicalToolsField
            End Get
            Set
                Me.mechanicalToolsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestLink() As String
            Get
                Return Me.requestLinkField
            End Get
            Set
                Me.requestLinkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumberOfUnitsExpected() As Integer
            Get
                Return Me.numberOfUnitsExpectedField
            End Get
            Set
                Me.numberOfUnitsExpectedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Requestor() As String
            Get
                Return Me.requestorField
            End Get
            Set
                Me.requestorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class ConfigurationReturnData
        Inherits ValidationBase
        
        Private calibrationsField() As Calibration
        
        Private productConfigsField() As ProductConfiguration
        
        Private stationXMLField As String
        
        Private testXMLField As String
        
        Private hostIDField As Integer
        
        Private hasProductXMLField As Boolean
        
        Private hasStationXMLField As Boolean
        
        Private hasCalibrationXMLField As Boolean
        
        '''<remarks/>
        Public Property Calibrations() As Calibration()
            Get
                Return Me.calibrationsField
            End Get
            Set
                Me.calibrationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductConfigs() As ProductConfiguration()
            Get
                Return Me.productConfigsField
            End Get
            Set
                Me.productConfigsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StationXML() As String
            Get
                Return Me.stationXMLField
            End Get
            Set
                Me.stationXMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestXML() As String
            Get
                Return Me.testXMLField
            End Get
            Set
                Me.testXMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HostID() As Integer
            Get
                Return Me.hostIDField
            End Get
            Set
                Me.hostIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasProductXML() As Boolean
            Get
                Return Me.hasProductXMLField
            End Get
            Set
                Me.hasProductXMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasStationXML() As Boolean
            Get
                Return Me.hasStationXMLField
            End Get
            Set
                Me.hasStationXMLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasCalibrationXML() As Boolean
            Get
                Return Me.hasCalibrationXMLField
            End Get
            Set
                Me.hasCalibrationXMLField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Partial Public Class ScanReturnData
        Inherits ValidationBase
        
        Private cPRNumberField As String
        
        Private hWRevisionField As String
        
        Private bSNField As String
        
        Private trackingLocationIDField As Integer
        
        Private trackingLocationNameField As String
        
        Private productTypeField As String
        
        Private accessoryTypeField As String
        
        Private productTypeIDField As Integer
        
        Private accessoryTypeIDField As Integer
        
        Private jobWILinkField As String
        
        Private scanSuccessField As Boolean
        
        Private noBSNField As Boolean
        
        Private testWILinkField As String
        
        Private trackingLocationManualLocationField As String
        
        Private productGroupField As String
        
        Private productIDField As Integer
        
        Private qRANumberField As String
        
        Private testStageNameField As String
        
        Private jobNameField As String
        
        Private directionField As ScanDirection
        
        Private applicableTestStagesField() As String
        
        Private applicableTestsField() As String
        
        Private unitNumberField As Integer
        
        Private testIDField As Integer
        
        Private selectedTestNameField As String
        
        Private isBBXField As Boolean
        
        Private batchDataField As BatchView
        
        '''<remarks/>
        Public Property CPRNumber() As String
            Get
                Return Me.cPRNumberField
            End Get
            Set
                Me.cPRNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HWRevision() As String
            Get
                Return Me.hWRevisionField
            End Get
            Set
                Me.hWRevisionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BSN() As String
            Get
                Return Me.bSNField
            End Get
            Set
                Me.bSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrackingLocationID() As Integer
            Get
                Return Me.trackingLocationIDField
            End Get
            Set
                Me.trackingLocationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrackingLocationName() As String
            Get
                Return Me.trackingLocationNameField
            End Get
            Set
                Me.trackingLocationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductType() As String
            Get
                Return Me.productTypeField
            End Get
            Set
                Me.productTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccessoryType() As String
            Get
                Return Me.accessoryTypeField
            End Get
            Set
                Me.accessoryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductTypeID() As Integer
            Get
                Return Me.productTypeIDField
            End Get
            Set
                Me.productTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccessoryTypeID() As Integer
            Get
                Return Me.accessoryTypeIDField
            End Get
            Set
                Me.accessoryTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobWILink() As String
            Get
                Return Me.jobWILinkField
            End Get
            Set
                Me.jobWILinkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ScanSuccess() As Boolean
            Get
                Return Me.scanSuccessField
            End Get
            Set
                Me.scanSuccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NoBSN() As Boolean
            Get
                Return Me.noBSNField
            End Get
            Set
                Me.noBSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestWILink() As String
            Get
                Return Me.testWILinkField
            End Get
            Set
                Me.testWILinkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrackingLocationManualLocation() As String
            Get
                Return Me.trackingLocationManualLocationField
            End Get
            Set
                Me.trackingLocationManualLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductGroup() As String
            Get
                Return Me.productGroupField
            End Get
            Set
                Me.productGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As Integer
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QRANumber() As String
            Get
                Return Me.qRANumberField
            End Get
            Set
                Me.qRANumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestStageName() As String
            Get
                Return Me.testStageNameField
            End Get
            Set
                Me.testStageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobName() As String
            Get
                Return Me.jobNameField
            End Get
            Set
                Me.jobNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Direction() As ScanDirection
            Get
                Return Me.directionField
            End Get
            Set
                Me.directionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicableTestStages() As String()
            Get
                Return Me.applicableTestStagesField
            End Get
            Set
                Me.applicableTestStagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicableTests() As String()
            Get
                Return Me.applicableTestsField
            End Get
            Set
                Me.applicableTestsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitNumber() As Integer
            Get
                Return Me.unitNumberField
            End Get
            Set
                Me.unitNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TestID() As Integer
            Get
                Return Me.testIDField
            End Get
            Set
                Me.testIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SelectedTestName() As String
            Get
                Return Me.selectedTestNameField
            End Get
            Set
                Me.selectedTestNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsBBX() As Boolean
            Get
                Return Me.isBBXField
            End Get
            Set
                Me.isBBXField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BatchData() As BatchView
            Get
                Return Me.batchDataField
            End Get
            Set
                Me.batchDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum ScanDirection
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        Outward
        
        '''<remarks/>
        Inward
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum FinalTestResult
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        Pass
        
        '''<remarks/>
        Fail
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://go/remi/")>  _
    Public Enum LookupType
        
        '''<remarks/>
        Exceptions
        
        '''<remarks/>
        Configuration
        
        '''<remarks/>
        AccessoryType
        
        '''<remarks/>
        ProductType
        
        '''<remarks/>
        TestCenter
        
        '''<remarks/>
        Training
        
        '''<remarks/>
        Level
        
        '''<remarks/>
        UnitType
        
        '''<remarks/>
        MeasurementType
        
        '''<remarks/>
        SFIFunctionalMatrix
        
        '''<remarks/>
        MFIFunctionalMatrix
        
        '''<remarks/>
        AccFunctionalMatrix
        
        '''<remarks/>
        RequestPurpose
        
        '''<remarks/>
        Observations
        
        '''<remarks/>
        Priority
        
        '''<remarks/>
        RequestType
        
        '''<remarks/>
        Department
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        FieldTypes
        
        '''<remarks/>
        ValidationTypes
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SearchBatchCompletedEventHandler(ByVal sender As Object, ByVal e As SearchBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BatchView()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BatchView())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddUnitExceptionCompletedEventHandler(ByVal sender As Object, ByVal e As AddUnitExceptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddUnitExceptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Notification
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Notification)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateUnitIMEICompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUnitIMEICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUnitIMEICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddUnitCompletedEventHandler(ByVal sender As Object, ByVal e As AddUnitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddUnitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAvailableUnitsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAvailableUnitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAvailableUnitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAvailableUnitsExcludedCompletedEventHandler(ByVal sender As Object, ByVal e As GetAvailableUnitsExcludedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAvailableUnitsExcludedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUnitBSNCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitBSNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitBSNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetNumOfUnitsCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumOfUnitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNumOfUnitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUnitAssignedToCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitAssignedToCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitAssignedToCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUnitCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TestUnit
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TestUnit)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DTATTAAddRemoveUnitCompletedEventHandler(ByVal sender As Object, ByVal e As DTATTAAddRemoveUnitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DTATTAAddRemoveUnitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ResolveStationNameCompletedEventHandler(ByVal sender As Object, ByVal e As ResolveStationNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ResolveStationNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetHostIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetHostIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHostIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTrackingLocationIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackingLocationIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackingLocationIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ReturnMultipleStationNamesCompletedEventHandler(ByVal sender As Object, ByVal e As ReturnMultipleStationNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReturnMultipleStationNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ReturnMultipleStationNamesByTypeCompletedEventHandler(ByVal sender As Object, ByVal e As ReturnMultipleStationNamesByTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReturnMultipleStationNamesByTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrackingLocation()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrackingLocation())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSpecificLocationForCurrentUsersTestCenterCompletedEventHandler(ByVal sender As Object, ByVal e As GetSpecificLocationForCurrentUsersTestCenterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSpecificLocationForCurrentUsersTestCenterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Test
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Test)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestByIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestByIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestByIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Test
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Test)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetParametricTestsCompletedEventHandler(ByVal sender As Object, ByVal e As GetParametricTestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParametricTestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestsByStationCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestsByStationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestsByStationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestStagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestStagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestStagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestStageCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestStageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestStageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TestStage
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TestStage)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetJobStagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobStagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobStagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TestStage()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TestStage())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupIDByTypeStringCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupIDByTypeStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupIDByTypeStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupsTypeStringByProductCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupsTypeStringByProductCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupsTypeStringByProductCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupsTypeStringByProductParentCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupsTypeStringByProductParentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupsTypeStringByProductParentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupsAdvancedCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupsAdvancedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupsAdvancedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupsByTypeStringCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupsByTypeStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupsByTypeStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SaveLookupCompletedEventHandler(ByVal sender As Object, ByVal e As SaveLookupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveLookupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupsByProductCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupsByProductCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupsByProductCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupsByProductParentCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupsByProductParentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupsByProductParentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLookupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLookupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLookupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetJobsCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetJobCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Job
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Job)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetOrientationsByJobCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrientationsByJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrientationsByJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetJobAccessCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobAccessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobAccessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SaveJobCompletedEventHandler(ByVal sender As Object, ByVal e As SaveJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserDetails
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserDetails)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserDetails2CompletedEventHandler(ByVal sender As Object, ByVal e As GetUserDetails2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserDetails2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserDetails
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserDetails)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As User
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),User)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetFriendlyUserIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetFriendlyUserIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFriendlyUserIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateProductCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateProductCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateProductCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductGroupsDataTableCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductGroupsDataTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductGroupsDataTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductIDByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductIDByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductIDByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductSettingsByProductIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductSettingsByProductIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductSettingsByProductIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductSettingsCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductSettingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductSettingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductSettingCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductSettingByProductIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductSettingByProductIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductSettingByProductIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBatchUnitsInStageCompletedEventHandler(ByVal sender As Object, ByVal e As GetBatchUnitsInStageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBatchUnitsInStageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub BatchUpdateOrientationCompletedEventHandler(ByVal sender As Object, ByVal e As BatchUpdateOrientationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BatchUpdateOrientationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestingSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestingSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestingSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetStressingSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetStressingSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStressingSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub BatchStartedBeforeAssignedCompletedEventHandler(ByVal sender As Object, ByVal e As BatchStartedBeforeAssignedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BatchStartedBeforeAssignedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetDefaultReqNumCompletedEventHandler(ByVal sender As Object, ByVal e As GetDefaultReqNumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDefaultReqNumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetDefaultReqNumWithUnitCompletedEventHandler(ByVal sender As Object, ByVal e As GetDefaultReqNumWithUnitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDefaultReqNumWithUnitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProductTypeIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductTypeIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductTypeIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestCenterIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestCenterIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestCenterIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAccessoryTypeIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccessoryTypeIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccessoryTypeIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBatchCompletedEventHandler(ByVal sender As Object, ByVal e As GetBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BatchView
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BatchView)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBatchNotificationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetBatchNotificationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBatchNotificationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Notification()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Notification())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBatchCommentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetBatchCommentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBatchCommentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetHardwareRevisionCompletedEventHandler(ByVal sender As Object, ByVal e As GetHardwareRevisionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHardwareRevisionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCPRNumberCompletedEventHandler(ByVal sender As Object, ByVal e As GetCPRNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCPRNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBatchNextStageCompletedEventHandler(ByVal sender As Object, ByVal e As GetBatchNextStageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBatchNextStageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TestStage
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TestStage)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestStagesNameByBatchCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestStagesNameByBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestStagesNameByBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestStagesByBatchCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestStagesByBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestStagesByBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TestStage()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TestStage())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetStagesNeedingCompletionByUnitCompletedEventHandler(ByVal sender As Object, ByVal e As GetStagesNeedingCompletionByUnitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStagesNeedingCompletionByUnitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestsByBatchStageCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestsByBatchStageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestsByBatchStageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestsByBatchCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestsByBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestsByBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SaveBatchCommentCompletedEventHandler(ByVal sender As Object, ByVal e As SaveBatchCommentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveBatchCommentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DNPParametricForBatchCompletedEventHandler(ByVal sender As Object, ByVal e As DNPParametricForBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DNPParametricForBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetPercentageCompleteForBatchCompletedEventHandler(ByVal sender As Object, ByVal e As GetPercentageCompleteForBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPercentageCompleteForBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetActiveBatchListCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveBatchListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveBatchListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetRequestsNotInREMICompletedEventHandler(ByVal sender As Object, ByVal e As GetRequestsNotInREMICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRequestsNotInREMICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetRequestsForDashBoardCompletedEventHandler(ByVal sender As Object, ByVal e As GetRequestsForDashBoardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRequestsForDashBoardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckBatchForStatusUpdatesCompletedEventHandler(ByVal sender As Object, ByVal e As CheckBatchForStatusUpdatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckBatchForStatusUpdatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ScanCompletedEventHandler(ByVal sender As Object, ByVal e As ScanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ScanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ScanReturnData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ScanReturnData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ScanAdvancedCompletedEventHandler(ByVal sender As Object, ByVal e As ScanAdvancedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ScanAdvancedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ScanReturnData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ScanReturnData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBatchResultsOverviewCompletedEventHandler(ByVal sender As Object, ByVal e As GetBatchResultsOverviewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBatchResultsOverviewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TestStageResultOverview()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TestStageResultOverview())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub IncomingGetAndSaveBatchCompletedEventHandler(ByVal sender As Object, ByVal e As IncomingGetAndSaveBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IncomingGetAndSaveBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IncomingAppBatchData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IncomingAppBatchData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMailAdvancedCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAllAccessByWorkstationCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllAccessByWorkstationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllAccessByWorkstationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub HasAccessCompletedEventHandler(ByVal sender As Object, ByVal e As HasAccessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HasAccessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub HasAccessByWorkstationCompletedEventHandler(ByVal sender As Object, ByVal e As HasAccessByWorkstationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HasAccessByWorkstationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetTestRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTestRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTestRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TestRecord()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TestRecord())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub TestRecordAddCompletedEventHandler(ByVal sender As Object, ByVal e As TestRecordAddCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TestRecordAddCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub BuildConfigurationObjectCompletedEventHandler(ByVal sender As Object, ByVal e As BuildConfigurationObjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuildConfigurationObjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ConfigurationReturnData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ConfigurationReturnData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DeleteExceptionCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteExceptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteExceptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddExceptionCompletedEventHandler(ByVal sender As Object, ByVal e As AddExceptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddExceptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetRequestCompletedEventHandler(ByVal sender As Object, ByVal e As GetRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RequestFields()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RequestFields())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetServicesAccessCompletedEventHandler(ByVal sender As Object, ByVal e As GetServicesAccessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServicesAccessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
